// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

package com.lingyu.common.proto;

public final class Game {
  private Game() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RpcMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.lingyu.common.proto.RpcMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool server = 1;</code>
     *
     * <pre>
     *是否服务器发起的消息
     * </pre>
     */
    boolean hasServer();
    /**
     * <code>required bool server = 1;</code>
     *
     * <pre>
     *是否服务器发起的消息
     * </pre>
     */
    boolean getServer();

    /**
     * <code>required bool sync = 2;</code>
     *
     * <pre>
     *是否属于同步的消息
     * </pre>
     */
    boolean hasSync();
    /**
     * <code>required bool sync = 2;</code>
     *
     * <pre>
     *是否属于同步的消息
     * </pre>
     */
    boolean getSync();

    /**
     * <code>optional bool binarymsg = 3;</code>
     *
     * <pre>
     *是为二进制消息
     * </pre>
     */
    boolean hasBinarymsg();
    /**
     * <code>optional bool binarymsg = 3;</code>
     *
     * <pre>
     *是为二进制消息
     * </pre>
     */
    boolean getBinarymsg();

    /**
     * <code>required int64 seqId = 4;</code>
     */
    boolean hasSeqId();
    /**
     * <code>required int64 seqId = 4;</code>
     */
    long getSeqId();

    /**
     * <code>required int32 type = 5;</code>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 5;</code>
     */
    int getType();

    /**
     * <code>optional int32 msgType = 6;</code>
     *
     * <pre>
     *协议编号
     * </pre>
     */
    boolean hasMsgType();
    /**
     * <code>optional int32 msgType = 6;</code>
     *
     * <pre>
     *协议编号
     * </pre>
     */
    int getMsgType();

    /**
     * <code>optional int64 roleId = 7;</code>
     *
     * <pre>
     * 角色id
     * </pre>
     */
    boolean hasRoleId();
    /**
     * <code>optional int64 roleId = 7;</code>
     *
     * <pre>
     * 角色id
     * </pre>
     */
    long getRoleId();

    /**
     * <code>optional string content = 8;</code>
     *
     * <pre>
     *fastjson序列号后的消息体
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 8;</code>
     *
     * <pre>
     *fastjson序列号后的消息体
     * </pre>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 8;</code>
     *
     * <pre>
     *fastjson序列号后的消息体
     * </pre>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    /**
     * <code>optional bytes relayMsgBody = 9;</code>
     *
     * <pre>
     *转发的二进制消息与content二者留一
     * </pre>
     */
    boolean hasRelayMsgBody();
    /**
     * <code>optional bytes relayMsgBody = 9;</code>
     *
     * <pre>
     *转发的二进制消息与content二者留一
     * </pre>
     */
    com.google.protobuf.ByteString getRelayMsgBody();

    /**
     * <code>optional int64 timestamp = 10;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 10;</code>
     */
    long getTimestamp();

    /**
     * <code>optional bool broadcast = 11;</code>
     *
     * <pre>
     *全服广播
     * </pre>
     */
    boolean hasBroadcast();
    /**
     * <code>optional bool broadcast = 11;</code>
     *
     * <pre>
     *全服广播
     * </pre>
     */
    boolean getBroadcast();

    /**
     * <code>repeated int64 broadcastRoleIds = 12;</code>
     *
     * <pre>
     * 广播给指定角色
     * </pre>
     */
    java.util.List<java.lang.Long> getBroadcastRoleIdsList();
    /**
     * <code>repeated int64 broadcastRoleIds = 12;</code>
     *
     * <pre>
     * 广播给指定角色
     * </pre>
     */
    int getBroadcastRoleIdsCount();
    /**
     * <code>repeated int64 broadcastRoleIds = 12;</code>
     *
     * <pre>
     * 广播给指定角色
     * </pre>
     */
    long getBroadcastRoleIds(int index);
  }
  /**
   * Protobuf type {@code com.lingyu.common.proto.RpcMsg}
   */
  public static final class RpcMsg extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.lingyu.common.proto.RpcMsg)
      RpcMsgOrBuilder {
    // Use RpcMsg.newBuilder() to construct.
    private RpcMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RpcMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RpcMsg defaultInstance;
    public static RpcMsg getDefaultInstance() {
      return defaultInstance;
    }

    public RpcMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lingyu.common.proto.Game.internal_static_com_lingyu_common_proto_RpcMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lingyu.common.proto.Game.internal_static_com_lingyu_common_proto_RpcMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lingyu.common.proto.Game.RpcMsg.class, com.lingyu.common.proto.Game.RpcMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<RpcMsg> PARSER =
        new com.google.protobuf.AbstractParser<RpcMsg>() {
      public RpcMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RpcMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SERVER_FIELD_NUMBER = 1;
    private boolean server_;
    /**
     * <code>required bool server = 1;</code>
     *
     * <pre>
     *是否服务器发起的消息
     * </pre>
     */
    public boolean hasServer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool server = 1;</code>
     *
     * <pre>
     *是否服务器发起的消息
     * </pre>
     */
    public boolean getServer() {
      return server_;
    }

    public static final int SYNC_FIELD_NUMBER = 2;
    private boolean sync_;
    /**
     * <code>required bool sync = 2;</code>
     *
     * <pre>
     *是否属于同步的消息
     * </pre>
     */
    public boolean hasSync() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool sync = 2;</code>
     *
     * <pre>
     *是否属于同步的消息
     * </pre>
     */
    public boolean getSync() {
      return sync_;
    }

    public static final int BINARYMSG_FIELD_NUMBER = 3;
    private boolean binarymsg_;
    /**
     * <code>optional bool binarymsg = 3;</code>
     *
     * <pre>
     *是为二进制消息
     * </pre>
     */
    public boolean hasBinarymsg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool binarymsg = 3;</code>
     *
     * <pre>
     *是为二进制消息
     * </pre>
     */
    public boolean getBinarymsg() {
      return binarymsg_;
    }

    public static final int SEQID_FIELD_NUMBER = 4;
    private long seqId_;
    /**
     * <code>required int64 seqId = 4;</code>
     */
    public boolean hasSeqId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 seqId = 4;</code>
     */
    public long getSeqId() {
      return seqId_;
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>required int32 type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 type = 5;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int MSGTYPE_FIELD_NUMBER = 6;
    private int msgType_;
    /**
     * <code>optional int32 msgType = 6;</code>
     *
     * <pre>
     *协议编号
     * </pre>
     */
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 msgType = 6;</code>
     *
     * <pre>
     *协议编号
     * </pre>
     */
    public int getMsgType() {
      return msgType_;
    }

    public static final int ROLEID_FIELD_NUMBER = 7;
    private long roleId_;
    /**
     * <code>optional int64 roleId = 7;</code>
     *
     * <pre>
     * 角色id
     * </pre>
     */
    public boolean hasRoleId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 roleId = 7;</code>
     *
     * <pre>
     * 角色id
     * </pre>
     */
    public long getRoleId() {
      return roleId_;
    }

    public static final int CONTENT_FIELD_NUMBER = 8;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 8;</code>
     *
     * <pre>
     *fastjson序列号后的消息体
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string content = 8;</code>
     *
     * <pre>
     *fastjson序列号后的消息体
     * </pre>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 8;</code>
     *
     * <pre>
     *fastjson序列号后的消息体
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELAYMSGBODY_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString relayMsgBody_;
    /**
     * <code>optional bytes relayMsgBody = 9;</code>
     *
     * <pre>
     *转发的二进制消息与content二者留一
     * </pre>
     */
    public boolean hasRelayMsgBody() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bytes relayMsgBody = 9;</code>
     *
     * <pre>
     *转发的二进制消息与content二者留一
     * </pre>
     */
    public com.google.protobuf.ByteString getRelayMsgBody() {
      return relayMsgBody_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 10;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 10;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 timestamp = 10;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int BROADCAST_FIELD_NUMBER = 11;
    private boolean broadcast_;
    /**
     * <code>optional bool broadcast = 11;</code>
     *
     * <pre>
     *全服广播
     * </pre>
     */
    public boolean hasBroadcast() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool broadcast = 11;</code>
     *
     * <pre>
     *全服广播
     * </pre>
     */
    public boolean getBroadcast() {
      return broadcast_;
    }

    public static final int BROADCASTROLEIDS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> broadcastRoleIds_;
    /**
     * <code>repeated int64 broadcastRoleIds = 12;</code>
     *
     * <pre>
     * 广播给指定角色
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getBroadcastRoleIdsList() {
      return broadcastRoleIds_;
    }
    /**
     * <code>repeated int64 broadcastRoleIds = 12;</code>
     *
     * <pre>
     * 广播给指定角色
     * </pre>
     */
    public int getBroadcastRoleIdsCount() {
      return broadcastRoleIds_.size();
    }
    /**
     * <code>repeated int64 broadcastRoleIds = 12;</code>
     *
     * <pre>
     * 广播给指定角色
     * </pre>
     */
    public long getBroadcastRoleIds(int index) {
      return broadcastRoleIds_.get(index);
    }

    private void initFields() {
      server_ = false;
      sync_ = false;
      binarymsg_ = false;
      seqId_ = 0L;
      type_ = 0;
      msgType_ = 0;
      roleId_ = 0L;
      content_ = "";
      relayMsgBody_ = com.google.protobuf.ByteString.EMPTY;
      timestamp_ = 0L;
      broadcast_ = false;
      broadcastRoleIds_ = java.util.Collections.emptyList();
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lingyu.common.proto.Game.RpcMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lingyu.common.proto.Game.RpcMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.lingyu.common.proto.RpcMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.lingyu.common.proto.RpcMsg)
        com.lingyu.common.proto.Game.RpcMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lingyu.common.proto.Game.internal_static_com_lingyu_common_proto_RpcMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lingyu.common.proto.Game.internal_static_com_lingyu_common_proto_RpcMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lingyu.common.proto.Game.RpcMsg.class, com.lingyu.common.proto.Game.RpcMsg.Builder.class);
      }

      // Construct using com.lingyu.common.proto.Game.RpcMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        server_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        sync_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        binarymsg_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        seqId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        msgType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        roleId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        relayMsgBody_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        broadcast_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        broadcastRoleIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lingyu.common.proto.Game.internal_static_com_lingyu_common_proto_RpcMsg_descriptor;
      }

      public com.lingyu.common.proto.Game.RpcMsg getDefaultInstanceForType() {
        return com.lingyu.common.proto.Game.RpcMsg.getDefaultInstance();
      }

      public com.lingyu.common.proto.Game.RpcMsg build() {
        com.lingyu.common.proto.Game.RpcMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lingyu.common.proto.Game.RpcMsg buildPartial() {
        com.lingyu.common.proto.Game.RpcMsg result = new com.lingyu.common.proto.Game.RpcMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.server_ = server_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sync_ = sync_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.binarymsg_ = binarymsg_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seqId_ = seqId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.msgType_ = msgType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.roleId_ = roleId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.relayMsgBody_ = relayMsgBody_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.broadcast_ = broadcast_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          broadcastRoleIds_ = java.util.Collections.unmodifiableList(broadcastRoleIds_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.broadcastRoleIds_ = broadcastRoleIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      private int bitField0_;

      private boolean server_ ;
      /**
       * <code>required bool server = 1;</code>
       *
       * <pre>
       *是否服务器发起的消息
       * </pre>
       */
      public boolean hasServer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool server = 1;</code>
       *
       * <pre>
       *是否服务器发起的消息
       * </pre>
       */
      public boolean getServer() {
        return server_;
      }
      /**
       * <code>required bool server = 1;</code>
       *
       * <pre>
       *是否服务器发起的消息
       * </pre>
       */
      public Builder setServer(boolean value) {
        bitField0_ |= 0x00000001;
        server_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool server = 1;</code>
       *
       * <pre>
       *是否服务器发起的消息
       * </pre>
       */
      public Builder clearServer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        server_ = false;
        onChanged();
        return this;
      }

      private boolean sync_ ;
      /**
       * <code>required bool sync = 2;</code>
       *
       * <pre>
       *是否属于同步的消息
       * </pre>
       */
      public boolean hasSync() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool sync = 2;</code>
       *
       * <pre>
       *是否属于同步的消息
       * </pre>
       */
      public boolean getSync() {
        return sync_;
      }
      /**
       * <code>required bool sync = 2;</code>
       *
       * <pre>
       *是否属于同步的消息
       * </pre>
       */
      public Builder setSync(boolean value) {
        bitField0_ |= 0x00000002;
        sync_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool sync = 2;</code>
       *
       * <pre>
       *是否属于同步的消息
       * </pre>
       */
      public Builder clearSync() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sync_ = false;
        onChanged();
        return this;
      }

      private boolean binarymsg_ ;
      /**
       * <code>optional bool binarymsg = 3;</code>
       *
       * <pre>
       *是为二进制消息
       * </pre>
       */
      public boolean hasBinarymsg() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool binarymsg = 3;</code>
       *
       * <pre>
       *是为二进制消息
       * </pre>
       */
      public boolean getBinarymsg() {
        return binarymsg_;
      }
      /**
       * <code>optional bool binarymsg = 3;</code>
       *
       * <pre>
       *是为二进制消息
       * </pre>
       */
      public Builder setBinarymsg(boolean value) {
        bitField0_ |= 0x00000004;
        binarymsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool binarymsg = 3;</code>
       *
       * <pre>
       *是为二进制消息
       * </pre>
       */
      public Builder clearBinarymsg() {
        bitField0_ = (bitField0_ & ~0x00000004);
        binarymsg_ = false;
        onChanged();
        return this;
      }

      private long seqId_ ;
      /**
       * <code>required int64 seqId = 4;</code>
       */
      public boolean hasSeqId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 seqId = 4;</code>
       */
      public long getSeqId() {
        return seqId_;
      }
      /**
       * <code>required int64 seqId = 4;</code>
       */
      public Builder setSeqId(long value) {
        bitField0_ |= 0x00000008;
        seqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 seqId = 4;</code>
       */
      public Builder clearSeqId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seqId_ = 0L;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>required int32 type = 5;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 type = 5;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 5;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 5;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }

      private int msgType_ ;
      /**
       * <code>optional int32 msgType = 6;</code>
       *
       * <pre>
       *协议编号
       * </pre>
       */
      public boolean hasMsgType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 msgType = 6;</code>
       *
       * <pre>
       *协议编号
       * </pre>
       */
      public int getMsgType() {
        return msgType_;
      }
      /**
       * <code>optional int32 msgType = 6;</code>
       *
       * <pre>
       *协议编号
       * </pre>
       */
      public Builder setMsgType(int value) {
        bitField0_ |= 0x00000020;
        msgType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 msgType = 6;</code>
       *
       * <pre>
       *协议编号
       * </pre>
       */
      public Builder clearMsgType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        msgType_ = 0;
        onChanged();
        return this;
      }

      private long roleId_ ;
      /**
       * <code>optional int64 roleId = 7;</code>
       *
       * <pre>
       * 角色id
       * </pre>
       */
      public boolean hasRoleId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 roleId = 7;</code>
       *
       * <pre>
       * 角色id
       * </pre>
       */
      public long getRoleId() {
        return roleId_;
      }
      /**
       * <code>optional int64 roleId = 7;</code>
       *
       * <pre>
       * 角色id
       * </pre>
       */
      public Builder setRoleId(long value) {
        bitField0_ |= 0x00000040;
        roleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roleId = 7;</code>
       *
       * <pre>
       * 角色id
       * </pre>
       */
      public Builder clearRoleId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        roleId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 8;</code>
       *
       * <pre>
       *fastjson序列号后的消息体
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string content = 8;</code>
       *
       * <pre>
       *fastjson序列号后的消息体
       * </pre>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            content_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 8;</code>
       *
       * <pre>
       *fastjson序列号后的消息体
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 8;</code>
       *
       * <pre>
       *fastjson序列号后的消息体
       * </pre>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 8;</code>
       *
       * <pre>
       *fastjson序列号后的消息体
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000080);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 8;</code>
       *
       * <pre>
       *fastjson序列号后的消息体
       * </pre>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        content_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString relayMsgBody_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes relayMsgBody = 9;</code>
       *
       * <pre>
       *转发的二进制消息与content二者留一
       * </pre>
       */
      public boolean hasRelayMsgBody() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bytes relayMsgBody = 9;</code>
       *
       * <pre>
       *转发的二进制消息与content二者留一
       * </pre>
       */
      public com.google.protobuf.ByteString getRelayMsgBody() {
        return relayMsgBody_;
      }
      /**
       * <code>optional bytes relayMsgBody = 9;</code>
       *
       * <pre>
       *转发的二进制消息与content二者留一
       * </pre>
       */
      public Builder setRelayMsgBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        relayMsgBody_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes relayMsgBody = 9;</code>
       *
       * <pre>
       *转发的二进制消息与content二者留一
       * </pre>
       */
      public Builder clearRelayMsgBody() {
        bitField0_ = (bitField0_ & ~0x00000100);
        relayMsgBody_ = getDefaultInstance().getRelayMsgBody();
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 10;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 timestamp = 10;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 10;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000200;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 10;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000200);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private boolean broadcast_ ;
      /**
       * <code>optional bool broadcast = 11;</code>
       *
       * <pre>
       *全服广播
       * </pre>
       */
      public boolean hasBroadcast() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool broadcast = 11;</code>
       *
       * <pre>
       *全服广播
       * </pre>
       */
      public boolean getBroadcast() {
        return broadcast_;
      }
      /**
       * <code>optional bool broadcast = 11;</code>
       *
       * <pre>
       *全服广播
       * </pre>
       */
      public Builder setBroadcast(boolean value) {
        bitField0_ |= 0x00000400;
        broadcast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool broadcast = 11;</code>
       *
       * <pre>
       *全服广播
       * </pre>
       */
      public Builder clearBroadcast() {
        bitField0_ = (bitField0_ & ~0x00000400);
        broadcast_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> broadcastRoleIds_ = java.util.Collections.emptyList();
      private void ensureBroadcastRoleIdsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          broadcastRoleIds_ = new java.util.ArrayList<java.lang.Long>(broadcastRoleIds_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int64 broadcastRoleIds = 12;</code>
       *
       * <pre>
       * 广播给指定角色
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getBroadcastRoleIdsList() {
        return java.util.Collections.unmodifiableList(broadcastRoleIds_);
      }
      /**
       * <code>repeated int64 broadcastRoleIds = 12;</code>
       *
       * <pre>
       * 广播给指定角色
       * </pre>
       */
      public int getBroadcastRoleIdsCount() {
        return broadcastRoleIds_.size();
      }
      /**
       * <code>repeated int64 broadcastRoleIds = 12;</code>
       *
       * <pre>
       * 广播给指定角色
       * </pre>
       */
      public long getBroadcastRoleIds(int index) {
        return broadcastRoleIds_.get(index);
      }
      /**
       * <code>repeated int64 broadcastRoleIds = 12;</code>
       *
       * <pre>
       * 广播给指定角色
       * </pre>
       */
      public Builder setBroadcastRoleIds(
          int index, long value) {
        ensureBroadcastRoleIdsIsMutable();
        broadcastRoleIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 broadcastRoleIds = 12;</code>
       *
       * <pre>
       * 广播给指定角色
       * </pre>
       */
      public Builder addBroadcastRoleIds(long value) {
        ensureBroadcastRoleIdsIsMutable();
        broadcastRoleIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 broadcastRoleIds = 12;</code>
       *
       * <pre>
       * 广播给指定角色
       * </pre>
       */
      public Builder addAllBroadcastRoleIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureBroadcastRoleIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, broadcastRoleIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 broadcastRoleIds = 12;</code>
       *
       * <pre>
       * 广播给指定角色
       * </pre>
       */
      public Builder clearBroadcastRoleIds() {
        broadcastRoleIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.lingyu.common.proto.RpcMsg)
    }

    static {
      defaultInstance = new RpcMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.lingyu.common.proto.RpcMsg)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_lingyu_common_proto_RpcMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_lingyu_common_proto_RpcMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ngame.proto\022\027com.lingyu.common.proto\"\336\001" +
      "\n\006RpcMsg\022\016\n\006server\030\001 \002(\010\022\014\n\004sync\030\002 \002(\010\022\021" +
      "\n\tbinarymsg\030\003 \001(\010\022\r\n\005seqId\030\004 \002(\003\022\014\n\004type" +
      "\030\005 \002(\005\022\017\n\007msgType\030\006 \001(\005\022\016\n\006roleId\030\007 \001(\003\022" +
      "\017\n\007content\030\010 \001(\t\022\024\n\014relayMsgBody\030\t \001(\014\022\021" +
      "\n\ttimestamp\030\n \001(\003\022\021\n\tbroadcast\030\013 \001(\010\022\030\n\020" +
      "broadcastRoleIds\030\014 \003(\003B\002H\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_lingyu_common_proto_RpcMsg_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_lingyu_common_proto_RpcMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_lingyu_common_proto_RpcMsg_descriptor,
        new java.lang.String[] { "Server", "Sync", "Binarymsg", "SeqId", "Type", "MsgType", "RoleId", "Content", "RelayMsgBody", "Timestamp", "Broadcast", "BroadcastRoleIds", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
