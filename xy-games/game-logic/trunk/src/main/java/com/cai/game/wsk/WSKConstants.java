package com.cai.game.wsk;

public class WSKConstants {
	// 游戏状态
	public static final int GAME_STATUS_FREE = 0; // 空闲状态
	public static final int GAME_STATUS_PLAY = 100; // 游戏状态
	public static final int GAME_STATUS_WAIT = 200; // 等待状态

	// 五十K 2幅扑克 一共108张
	public static final int CARD_DATA_DEGAULE_WSK[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
			0x0A, 0x0B, 0x0C, 0x0D, // 方块A-K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花A-K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃A-K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃A-K
			0x4E, 0x4F, // 大王 小王
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块A-K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花A-K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃A-K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃A-K
			0x4E, 0x4F, // 大王 小王
	};

	// 五十K 2幅扑克+1张花牌 一共109张
	public static final int CARD_DATA_WSK_ONE_MAGIC[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块A-K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花A-K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃A-K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃A-K
			0x4E, 0x4F, // 大王 小王
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块A-K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花A-K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃A-K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃A-K
			0x4E, 0x4F, // 大王 小王
			0x4D, // 花牌
	};

	// 五十K 2幅扑克+2张花牌 一共110张
	public static final int CARD_DATA_WSK_TWO_MAGIC[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块A-K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花A-K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃A-K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃A-K
			0x4E, 0x4F, // 大王 小王
			0x4D, // 花牌
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块A-K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花A-K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃A-K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃A-K
			0x4E, 0x4F, // 大王 小王
			0x4D, // 花牌
	};

	// 默认麻将 基本牌都有
	public static final int DEFAULT[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, // 万子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子

			0x31, 0x31, 0x31, 0x31, // 东风
			0x32, 0x32, 0x32, 0x32, // 西风
			0x33, 0x33, 0x33, 0x33, // 南风
			0x34, 0x34, 0x34, 0x34, // 北风
			0x35, 0x35, 0x35, 0x35, // 红中
			0x36, 0x36, 0x36, 0x36, // 绿发
			0x37, 0x37, 0x37, 0x37, // 白板
	};

	public static final int CARD_DATA_BU_DAI_FENG_YYZXZ[] = new int[] { 0x01, 0x01, 0x01, 0x01, 0x09, 0x09, 0x09, 0x09, // 万子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, // 索子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, // 同子
	};
	// 扑克牌值 一副牌16张
	public static final int CARD_DATA_SXTH_EIGHT_KING[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
											// A
											// -
											// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K

			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
																							// A
																							// -
																							// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
			// A
			// -
			// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
			// A
			// -
			// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
			// A
			// -
			// K
			0x4E, 0x4F, 0x4E, 0x4F, 0x4E, 0x4F, 0x4E, 0x4F };
	public static final int CARD_DATA_SXTH_FOUR_KING[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
											// A
											// -
											// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K

			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
																							// A
																							// -
																							// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
			// A
			// -
			// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
			// A
			// -
			// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
			// A
			// -
			// K
			0x4E, 0x4F, 0x4E, 0x4F };
	public static final int CARD_DATA_SXTH_NO_KING[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
			0x0A, 0x0B, 0x0C, 0x0D, // 方块
									// A
									// -
									// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K

			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
																							// A
																							// -
																							// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
			// A
			// -
			// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
			// A
			// -
			// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
			// A
			// -
			// K
			0x4E, 0x4F, 0x4E, 0x4F };

	public static final int CARD_DATA_HTS_NO_KING_1[] = new int[] { 0x01, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
			0x0A, 0x0B, 0x0C, 0x0D, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x21,
			0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
			0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, };

	public static final int CARD_DATA_HTS_NO_KING_2[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x11, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x21,
			0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
			0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, };

	public static final int CARD_DATA_HTS_NO_KING_3[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D,
			0x21, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
			0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, };

	public static final int CARD_DATA_HTS_NO_KING_4[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D,
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x31, 0x33, 0x34, 0x35, 0x36,
			0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, };
	// 扑克牌值 一副牌16张
	public static final int CARD_DATA_PXGT_TWO[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
			0x0A, 0x0B, 0x0C, 0x0D, // 方块
									// A
									// -
									// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
																							// A
																							// -
																							// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
	};
	// 扑克牌值 一副牌16张
	public static final int CARD_DATA_YXZD[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A,
			0x0B, 0x0C, 0x0D, // 方块
								// A
								// -
								// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
																							// A
																							// -
																							// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
			// A
			// -
			// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
			// A
			// -
			// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
			// A
			// -
			// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
			// A
			// -
			// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
			// A
			// -
			// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
			// A
			// -
			// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
			// A
			// -
			// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
			// A
			// -
			// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
			// A
			// -
			// K
			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
			// A
			// -
			// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
			// A
			// -
			// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
			// A
			// -
			// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
			// A
			// -
			// K
			0x4E, 0x4F, 0x4E, 0x4F, 0x4E, 0x4F, 0x4E, 0x4F, 0x4E, 0x4F, 0x4E, 0x4F, };
	// 五十K 2幅扑克 一共108张
	public static final int CARD_DATA_ZZSHA[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A,
			0x0B, 0x0C, 0x0D, // 方块A-K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花A-K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃A-K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃A-K
	};
	// 扑克牌值 一副牌16张
	public static final int CARD_DATA_WSK_GF_BA_WANG[] = new int[] { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
			0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
											// A
											// -
											// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x4E, 0x4F, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, // 方块
																										// A
																										// -
																										// K
			0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, // 梅花
																							// A
																							// -
																							// K
			0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, // 红桃
																							// A
																							// -
																							// K
			0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, // 黑桃
																							// A
																							// -
																							// K
			0x4E, 0x4F, 0x4E, 0x4F, 0x4E, 0x4F, };
	// 玉山打炸
	public static final int WSK_YSDZ_CT_ERROR = -1; // 错误类型
	public static final int WSK_YSDZ_CT_PASS = 0; // 过
	public static final int WSK_YSDZ_CT_SINGLE = 1; // 单牌类型
	public static final int WSK_YSDZ_CT_DOUBLE = 2; // 对子类型
	public static final int WSK_YSDZ_CT_THREE = 3; // 3张类型
	public static final int WSK_YSDZ_CT_THREE_TAKE_TWO = 4; // 3带二
	public static final int WSK_YSDZ_CT_SINGLE_LINK = 5; // 单连类型
	public static final int WSK_YSDZ_CT_DOUBLE_LINK = 6; // 对连类型
	public static final int WSK_YSDZ_CT_PLANE = 7; // 飞机
	public static final int WSK_YSDZ_CT_PLANE_LOST = 8; // 飞机缺翅膀
	public static final int WSK_YSDZ_CT_510K_DC = 9; // 杂510K
	public static final int WSK_YSDZ_CT_510K_SC = 10; // 纯510K
	public static final int WSK_YSDZ_CT_BOMB_4 = 11; // 4炸类型
	public static final int WSK_YSDZ_CT_BOMB_5 = 12; // 5弹类型
	public static final int WSK_YSDZ_CT_BOMB_6 = 13; // 6炸类型
	public static final int WSK_YSDZ_CT_BOMB_7 = 14; // 7炸类型
	public static final int WSK_YSDZ_CT_BOMB_8 = 15; // 8炸类型
	public static final int WSK_YSDZ_CT_BOMB_9 = 16; // 9炸类型
	public static final int WSK_YSDZ_CT_KING_FOUR = 17; // 4王炸弹
	public static final int WSK_YSDZ_CT_BOMB_10 = 18; // 10炸类型
	public static final int WSK_YSDZ_CT_BOMB_11 = 19; // 11炸类型
	public static final int WSK_YSDZ_CT_BOMB_12 = 20; // 12炸类型
	public static final int WSK_YSDZ_CT_BOMB_13 = 21; // 13炸类型

	// 规则
	public static final int GAME_RULE_WSK_HSDY_NO_TRUSTEE = 1;

	/////////////////////////////////////////////////////////////// 玉山打炸
	public static final int GAME_RULE_YSDZ_CLASS = 1;// 经典
	public static final int GAME_RULE_YSDZ_510K = 2;// 510K
	public static final int GAME_RULE_YSDZ_7_REWARD = 3;// 7开奖
	public static final int GAME_RULE_YSDZ_J_REWARD = 4;// J开奖
	public static final int GAME_RULE_YSDZ_K_REWARD = 5;// K开奖
	public static final int GAME_RULE_YSDZ_A_REWARD = 6;// A开奖
	public static final int GAME_RULE_YSDZ_FA_WANG_BU_DA = 7;// 罚王不打
	public static final int GAME_RULE_YSDZ_WU_ZHA_TAN_PAI = 8;// 无炸摊牌
	public static final int GAME_RULE_YSDZ_YING_EIGHT_ZHA = 9;// 硬8炸
	////////////////////////////////////////////////////////////// 萍乡滚筒
	public static final int CARD_COUNT_PXGT_TWO = 104;// 萍乡滚筒
	public static final int PXGT_CT_ERROR = -1; // 错误类型
	public static final int PXGT_CT_PASS = 0; // 过
	public static final int PXGT_CT_SINGLE = 1; // 单牌类型
	public static final int PXGT_CT_DOUBLE = 2; // 对子类型
	public static final int PXGT_CT_SINGLE_LINK = 3; // 单连类型
	public static final int PXGT_CT_DOUBLE_LINK = 4; // 对连类型
	public static final int PXGT_CT_THREE = 5; // 3张类型
	public static final int PXGT_CT_THREE_TAKE_TWO = 6; // 3带二
	public static final int PXGT_CT_FOUR_TAKE_ONE = 7; // 4带1
	public static final int PXGT_CT_PLANE = 8; // 飞机
	public static final int PXGT_CT_510K_DC = 9; // 杂510K
	public static final int PXGT_CT_510K_SC = 10; // 纯510K
	public static final int PXGT_CT_BOMB = 11; // 4炸类型
	public static final int PXGT_CT_KING_FOUR = 12; // 王炸
	public static final int PXGT_CT_GUN_TONG_DC = 13; // 杂滚筒
	public static final int PXGT_CT_GUN_TONG_SC = 14; // 真滚筒

	// 玩法
	public static final int GAME_RULE_SWK_AWARD_2_PX = 1; // 2分/奖
	public static final int GAME_RULE_SWK_AWARD_3_PX = 2; // 3分/奖
	public static final int GAME_RULE_SWK_AWARD_5_PX = 3; // 5分/奖
	public static final int GAME_RULE_SWK_RAND_TEAM_PX = 4; // 随机队友
	public static final int GAME_RULE_SWK_FIX_TEAM_PX = 5; // 固定队友
	public static final int GAME_RULE_SWK_ALARM_PX = 6; // 报警
	public static final int GAME_RULE_SWK_TAKE_KING_PX = 7; // 带王
	public static final int GAME_RULE_SWK_PLANE_LINK_PX = 8; // 飞机连对
	public static final int GAME_RULE_SWK_ALARM_PX_NO = 9; // 不报警
	public static final int GAME_RULE_SWK_AWARD_1_PX = 10; // 1分/奖
	public static final int GAME_RULE_SWK_AWARD_4_PX = 11; // 4分/奖
	public static final int GAME_RULE_SWK_AWARD_ADD = 12; // 奖分累加
	public static final int GAME_RULE_SWK_AWARD_DOUBLE = 13; // 奖分翻倍

	// 永兴炸弹
	public static final int GS_YXZD_FAN_PAI = 101;
	public static final int CARD_COUNT_YXZD = 324; // 永兴炸弹
	public static final int WSK_YXZD_CT_ERROR = -1; // 错误类型
	public static final int WSK_YXZD_CT_PASS = 0; // 过
	public static final int WSK_YXZD_CT_SINGLE = 1; // 单牌类型
	public static final int WSK_YXZD_CT_DOUBLE = 2; // 对子类型
	public static final int WSK_YXZD_CT_THREE = 3; // 3张类型
	public static final int WSK_YXZD_CT_SINGLE_LINK = 4; // 单连类型
	public static final int WSK_YXZD_CT_DOUBLE_LINK = 5; // 对连类型
	public static final int WSK_YXZD_CT_PLANE = 6; // 飞机
	public static final int WSK_YXZD_CT_510K = 7; // 杂510K
	public static final int WSK_YXZD_CT_BOMB = 8; // 4炸类型
	// 玩法
	public static final int GAME_YXZD_SHANG_YOU_100 = 1; // 上游100
	public static final int GAME_YXZD_SHANG_YOU_150 = 2; // 上游150
	public static final int GAME_YXZD_CAN_YI_TUO_ER = 5; // 队友明牌

	// 株洲双红A
	public static final int CARD_COUNT_ZZSHA = 52; // 永兴炸弹
	public static final int ZZSHA_CT_ERROR = -1; // 错误类型
	public static final int ZZSHA_CT_PASS = 0; // 过
	public static final int ZZSHA_CT_SINGLE = 1; // 单牌类型
	public static final int ZZSHA_CT_DOUBLE = 2; // 对子类型
	public static final int ZZSHA_CT_THREE_TAKE_TWO = 3; // 3带二
	public static final int ZZSHA_CT_SINGLE_LINK = 4; // 单连类型
	public static final int ZZSHA_CT_DOUBLE_LINK = 5; // 对连类型
	public static final int ZZSHA_CT_PLANE = 6; // 飞机
	public static final int ZZSHA_CT_510K_DC = 7; // 杂510K
	public static final int ZZSHA_CT_510K_SC = 8; // 纯510K
	public static final int ZZSHA_CT_BOMB = 9; // 4炸类型
	public static final int ZZSHA_CT_KING_BOMB = 10; // 双A炸

	// 广丰八王
	public static final int CARD_COUNT_WSK_GF_BA_WANG = 112; // 510K排数

	// 都昌讨赏
	public static final int CARD_COUNT_DCTS = 108; // 永兴炸弹
	public static final int DCTS_CT_ERROR = -1; // 错误类型
	public static final int DCTS_CT_PASS = 0; // 过
	public static final int DCTS_CT_SINGLE = 1; // 单牌类型
	public static final int DCTS_CT_DOUBLE = 2; // 对子类型
	public static final int DCTS_CT_THREE = 3; // 三张类型
	public static final int DCTS_CT_SINGLE_LINK = 4; // 单连类型
	public static final int DCTS_CT_DOUBLE_LINK = 5; // 对连类型
	public static final int DCTS_CT_BOMB = 6; // 4炸类型
	public static final int DCTS_CT_KING_BOMB = 7; // 王炸

	// 玩法
	public static final int GAME_RULE_SING_LINK_DCTS_NO = 1; // 不可出单龙
	public static final int GAME_RULE_SING_LINK_DCTS = 2; // 可出单龙
	public static final int GAME_RULE_DIS_CAL_REWARD_DCTS_NO = 3; // 解散不算奖
	public static final int GAME_RULE_DIS_CAL_REWARD_DCTS = 4; // 解散算奖
	public static final int GAME_RULE_CHAT_DCTS = 5; // 允许聊天
	public static final int GAME_RULE_CHAT_DCTS_NO = 6; // 不允许聊天
	public static final int GAME_RULE_ALARM_DCTS_NO = 7; // 不报警
	public static final int GAME_RULE_ALARM_DCTS = 8; // 报警
}
