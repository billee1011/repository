option java_package = "protobuf.clazz"; 
option java_outer_classname = "Protocol";
//option optimize_for = LITE_RUNTIME;
//option java_generic_services = true;

//心跳请求
message HeartRequest {
	optional int64 time = 1;
	optional int32 seq_num = 2;//序号
}
//心跳返回
message HeartResponse {
	optional int64 sys_time = 1;
	optional int32 seq_num = 2;//序号
}

//登录请求
message LoginRequest {
  optional int32 type = 1; //1=微信登录重新授权(wx_code,game_index,client_flag) 2=平台转码的微信登录(self_token,game_index) 3=快速登录(imei,game_index,client_flag) 100=成功登录后请求
  optional string wx_code = 2; //接口调用凭证
  optional string self_token = 3; //登录令牌
  optional string imei = 4;//手机唯一码
  optional int32 game_index = 5;//游戏标识 1=麻将
  optional int32 client_flag = 6;//客户端标识 1=安卓 2=苹果 3=pc
  optional string client_version = 7;//客户端最后登录版本
  optional int32 reconnect = 8;//0=正常登录  1=重连登录
}
//账号信息
message AccountResponse {
	optional int64 account_id = 1;//账号id
	optional string account_name = 2;//账号名字
	optional int32 sex = 3;//性别 1=男 2=女
	optional int32 account_create_time = 4;//账号创建时间
	optional int64 gold = 5;//金币
	optional int32 vip_lvl = 6;//vip等级
	optional string head_img_url = 7;//头像
	optional string ip = 8;//客户端ip
	optional string nick_name = 9;//昵称
	optional string ip_addr = 10;//ip物理地址
	optional bool is_null_agent_pw = 11;//是否是空的代理密码
}
//玩家信息
message PlayerResponse {
	optional int64 user_id = 1;//角色id,每个游戏不同
	optional int64 account_id = 2;//账号id
	optional string user_name = 3;//角色名
	optional int32 score = 4;//分数
	optional int32 vip_lvl = 5;//vip等级
	optional int32 player_create_time = 6;//角色创建时间
	optional string account_icon = 7;//账号头像
	optional string account_ip = 8;//账号ip
}
//游戏通用属性值
message AccountPropertyResponse {
	//属性id <1000 为账号的   >=1000为系统的
	optional int32 prop_id = 1;
	optional int32 val1 = 2;//数值1
	optional int32 val2 = 3;//数值2
	optional int32 val3 = 4;//数值3
	optional string str1 = 5;//字符串1
	optional string str2 = 6;//字符串2
	optional int64 vallong1 = 7;//长整型值1
}
//游戏通用属性值列表
message AccountPropertyListResponse {
	repeated AccountPropertyResponse accountProperty = 1;
}

//登录返回,所有登录方式通用的属性
message LoginItemResponse {
	optional AccountResponse accountResponse = 1;//账号信息
	optional PlayerResponse playerResponse = 2;//角色信息
	optional int32 game_index = 3;//游戏标识
	optional string game_name = 4;//游戏名称
	repeated AccountPropertyResponse accountProperty = 5;
}
//微信登录相关信息
message WxLoginItemResponse { 
  optional string self_token = 1;//本平台登录码
  optional LoginItemResponse loginItemResponse = 2;//登录通用信息
}
//快速登录返回
message FastLogingItemResponse {
	optional string imei = 1;//唯一码
	optional LoginItemResponse loginItemResponse = 2;//登录通用信息
}

//登录返回
message LoginResponse {
  //1=微信登录返回(wxLoginItemResponse,error_code) 2=快速登录返回(fastLogingItemResponse)
  //3=平台转码微信登录返回(wxLoginItemResponse,error_code) 4=通知客户端最低版本要求(clientVersionRequireResponse)
	optional int32 type = 1;
	optional WxLoginItemResponse wxLoginItemResponse = 2; //微信相关信息
	optional FastLogingItemResponse fastLogingItemResponse = 3;//快速登录返回
	optional int32 error_code = 4;//登录状态码0正常  1失败
  
}
//创建房间
message RoomRequest {
	//1=创建房间请求(game_type_index,game_rule_index,game_round) 2=加入房间(room_id,room_pw) 3=重新进入房间
	//4=请求牌局数据(target_account_id,如果有传这个值表示其它玩家的)
	//5=请求某一局数据(record_id)
	//6=小局数详细数据(brand_id)
	//10 = 玩家准备
	//11 = 解散房间
	//12 进入了房间
	//13 聊天audio_chat
	//14表情(emjoy_id)
	//101 = 玩家出牌(operate_card),
	//102 = 玩家操作,吃碰杠等。(operate_card,operate_code)

	
	optional int32 type = 1;
	optional int32 game_type_index = 2;//麻将类型
	optional int32 game_rule_index =3;//玩法
	optional int32 game_round = 4;//局数
	optional int32 room_id = 5;//房间号
	optional string room_pw = 6;//房间密码
	optional int32 operate_card = 7;//操作的牌
	optional int32 operate_code = 8;//操作指令

	optional int64 record_id = 9;
	optional int32 round = 10;


	optional int32 emjoy_id = 12;
	optional int32 operate_len = 13;


	//语音
	optional bytes audio_chat = 11;
	optional float audio_len = 14;//音效长度
	optional int32 audio_size = 15;
	optional int64 brand_id = 16;//牌局id
	optional int32 in_room_way = 17;//进入的方式 1=普通  2=从分享链接进来的
	//
	optional int64 target_account_id = 18;//目标玩家账号id
}
//房间玩家账号信息
message LogicRoomAccountItemRequest{
	optional int64 account_id = 1;//账号id
	optional int64 gold = 2;//金币
	optional int32 proxy_index = 3;//代理服id
	optional int64 proxy_session_id = 4;//在代理服的session_id
	optional string account_icon = 5;//账号头像
	optional string account_ip = 6;//账号ip
	optional string nick_name = 7;//昵称
	optional int32 sex = 8;//性别 1=男 2=女
	optional string ip_addr = 10;//ip物理地址

}
//逻辑-创建房间
message LogicRoomRequest {
	//创建房间(roomRequest,room_id,logicRoomAccountItemRequest) 2=进入房间(roomRequest,room_id,logicRoomAccountItemRequest) 3=重新进入房间(roomRequest,room_id)
	//4=玩家掉线(account_id)
	optional int32 type = 1;
	optional RoomRequest roomRequest = 2;//客户端的消息
	optional int32 room_id = 3;//房间号
	optional LogicRoomAccountItemRequest logicRoomAccountItemRequest = 4;//房间玩家账号信息
	optional int64 account_id = 5;//账号id
}
//组合子项
message WeaveItemResponse {
	optional int32 weave_kind = 1;//组合类型
	optional int32 center_card = 2;//中心扑克
	optional int32 public_card = 3;//公开标志
	optional int32 provide_player = 4;//供应用户
}
message WeaveItemResponseArrayResponse{
	repeated WeaveItemResponse weaveItem = 1;
}


message Int32ArrayResponse{
	repeated int32 item = 1;
}

message TableResponse {
	//游戏变量
	optional int32 cell_score = 1;//单元积分
	optional int32 banker_player = 2;//庄家用户
	optional int32 current_player = 3;//当前用户
	//状态变量
	optional int32 action_card = 4;//动作扑克
	optional int32 action_mask = 5;//动作掩码
	optional int32 left_card_count = 6;//剩余数目
	repeated bool trustee = 7;//是否托管
	repeated int32 winner_order = 8;
	//出牌信息
	optional int32 out_card_player = 9;//出牌用户
	optional int32 out_card_data = 10;//出牌扑克
	repeated int32 discard_count = 11;//丢弃数目
	repeated Int32ArrayResponse discard_cards = 12;//丢弃记录
	//扑克数据
	repeated int32 card_count = 13;//扑克数目
	repeated int32 cards_data = 14;//扑克列表
	optional int32 send_card_data = 15;//发送扑克
	//组合扑克
	repeated int32 weave_count = 16;//组合数目
	repeated WeaveItemResponseArrayResponse weaveItemArray = 17;//组合扑克

	repeated int32 cards_data_niao = 18;//扎鸟

}

//房间信息
message RoomInfo{
	optional int32 room_id = 1;//房间号
	optional int32 game_type_index = 4;//玩法
	optional int32 game_rule_index = 2;//玩法
	optional string game_rule_des = 3;//玩法说明
	optional int32 game_round = 5;
	optional int32 cur_round = 6;
	optional int32 game_status = 7;
	optional int64 create_player_id = 8;
}

//房间的玩家
message RoomPlayerResponse{
	optional int64 account_id = 1;//账号id
	optional string user_name = 2;//角色名
	optional string head_img_url = 3;//玩家头像
	optional int32  seat_index = 4;//玩家位置索引
	optional string ip = 5;//玩家IP
	optional int32 online = 6;//1在线0断线
	optional int32 sex = 7;
	optional float score = 8;
	optional int32 ready = 9;//0没准备,1准备
	optional string ip_addr = 10;//物理地址
}

//游戏开始
message GameStartResponse{
	optional int32	sice_index = 1;								//骰子点数
	optional int32	banker_player = 2;							//庄家用户
	optional int32 current_player = 3;						//当前用户
	repeated int32 cards_count = 4;							//每个用户的手牌
	optional int32 player_action = 5;							//用户动作
	repeated int32 card_data = 6;						//手牌
	optional int32	left_card_count = 7;							//剩余牌
	optional int32 xiao_hu_tag = 8;            		    //小胡标记 0 没小胡 1 有小胡；
	optional int32 game_round = 9;
	optional int32 cur_round = 10;//当前局数


	repeated Int32ArrayResponse cards_data = 11;
}


message PlayerResultResponse{
	repeated int32 zi_mo_count = 1;
	repeated int32 jie_pao_count = 2;
	repeated int32 dian_pao_count = 3;
	repeated int32 an_gang_count = 4;
	repeated int32 ming_gang_count = 5;

	repeated float game_score = 6;
	repeated Int32ArrayResponse lost_fan_shu = 7;
	repeated int32 win_order = 8;


	optional int32 room_id = 9;
	optional int64 create_time = 10;
	optional int64 room_owner_account_id = 11;
	optional string room_owner_name = 12;
	optional int32 game_type_index = 17;//玩法
	optional int32 game_rule_index = 18;//玩法
	optional string game_rule_des = 19;//玩法说明
	optional int32 game_round = 20;

	repeated string players_name = 13;
	repeated int64 players_id = 14;

	optional int64 record_id = 15;


	//长沙
	repeated int32 da_hu_zi_mo = 21;
	repeated int32 da_hu_jie_pao = 22;
	repeated int32 da_hu_dian_pao = 23;
	repeated int32 xiao_hu_zi_mo = 24;
	repeated int32 xiao_hu_jie_pao = 25;
	repeated int32 xiao_hu_dian_pao = 26;

	//飘赖
	repeated int32 piao_lai_count = 27;

	repeated RoomPlayerResponse players = 16;
}


//游戏结束
message GameEndResponse{
	//
	optional RoomInfo						room_info = 30;

	optional int32 							end_type = 27;								//游戏状态

	optional int32 							cur_round = 28;						//当前圈数

	optional int32 							game_round = 1;								//游戏状态

	//游戏变量
	optional int32 							cell_score = 5;								//单元积分
	optional int32 							banker_player = 6;								//庄家用户

	//结束信息
	repeated int32 provide_player = 7;	//供应用户
	repeated int64 chi_hu_right = 8;	//胡牌类型
	repeated int64 start_hu_right = 9;   //起手胡牌类型
	repeated int32 start_hu_score = 10;	//起手胡牌分数

	//积分信息
	repeated float game_score = 11;		//游戏积分

	repeated int32 win_order = 12;	//胡牌排名

	//详细得分
	repeated float gang_score = 13;
	repeated int32 gang_count = 14;
	repeated Int32ArrayResponse lost_fan_shu = 15;




	//扑克数据
	optional int32 left_card_count = 19;						//剩余数目
	repeated Int32ArrayResponse cards_data = 20;			//牌列表
	repeated int32	hu_card_data = 21;								//胡的牌
	repeated WeaveItemResponseArrayResponse weaveItemArray = 16;//组合扑克

	repeated int32	cards_data_niao = 17;	// 鸟牌
	optional int32 count_pick_niao = 18;	//中鸟个数
	repeated Int32ArrayResponse player_niao_cards = 29;//玩家中鸟


	optional PlayerResultResponse player_result = 31;
	repeated string result_des = 32;

	optional int32 game_type_index = 33;
	optional int64 start_time = 34;
	optional int32 version = 35;
	repeated int32 hu_result = 36;
	optional int32 round_over_type = 37;
	optional int32 room_over_type = 38;

	optional int32 compress_video = 40;
	optional Video_Record record = 39;

	optional int64 brand_id = 41;

	optional int32 show_bird_effect = 42;//0不显示 1显示
	repeated int32 especial_show_cards = 43;
	optional int64 end_time = 44;//结束时间

	//牌局特殊显示的描述
	optional string especial_txt = 45;
	optional int32 especial_txt_type = 46;
}


/***回放 */
message Video_Record_Item{
	optional int32 type = 1;
	optional int32 current_player = 2;
	optional int32 operate_player = 3;			//操作用户

	optional int32 card_count = 4;//牌数量
	repeated int32 card_data = 5;//牌

	repeated int64 effects_index = 6;
	optional int32 effect_time = 7;
	optional int32 effect_count = 8;
	optional int32 effect_type = 9;

	//操作
	optional int64 actions = 10;//长度为0,关闭操作条

	//组合数据
	repeated WeaveItemResponse weave_items = 11;
	optional int32 weave_count = 12;
}

message Video_Record_Item_List{
	optional int32 left_card_count = 1;
	optional int32 current_player = 2;

	repeated Video_Record_Item records = 3;
}

message Record_RoomResponse{
	optional int64 delta = 1;
	optional RoomResponse rr = 2;
}

message Video_Record {
	optional RoomInfo room_info = 1;			//房间信息
	repeated RoomPlayerResponse players = 2;		//牌桌玩家
	repeated Int32ArrayResponse hand_cards = 3;

	repeated Video_Record_Item_List records = 4;

	optional int32 banker_player = 5;

	repeated Record_RoomResponse record_list = 6;
}



//房间总返回
message RoomResponse {
	optional int32 type = 1;//返回类型  1=桌子信息(tableResponse,players)
	//2 创建房间
	//3重连返回,没有有效房间
	//4请求牌桌数据
	//10 进入房间
	//11 有玩家进出房间
	//12更新玩家手牌数据(operate_player,card_count,card_data)
	//13更新玩家牌数据(包含吃碰杠组合)(operate_player,card_count,card_data,weave_items)
	//14摊牌
	//15结束(GameEndResponse,RoomInfo,RoomPlayerResponse)
	//16断线重连桌子(TableResponse,RoomInfo,RoomPlayerResponse)
	//17 刷新玩家出的牌(operate_player,card_data)
	//18 玩家申请解散房间( operate_code=1发起解散2=同意解散3=不同意解散)
	//19 显示小胡(card_data\operate_code\operate_player)
	//20系统级别的,收到这个消息,玩家强制退出客户端
	//21玩家准备(operate_player)
	//22解散(release_players,request_player_seat,left_time,release_time)
	//23语音聊天(operate_player,audio_chat)
	//24表情聊天(emjoy_id)

	//25牌的操作,添加牌到玩家的牌堆等
	//26显示效果(effects_index,effect_time,effect_target)

	//200 开始(gameStart)
	//201 =玩家出牌(CMD_OutCard: operate_player,operate_card)
	//202 = 操作提示(CMD_OperateNotify:operate_player,operate_code,operate_card)
	//203 = 操作结果(CMD_OperateResult:operate_player,provide_player,operate_code,operate_card)
	//204 = 发牌（CMD_SendCard:operate_player,operate_card,operate_code,left_card_count)
	//205 = 胡牌结果(CMD_OperateResult:operate_player,provide_player,operate_code,operate_card,chi_hu_rights)

	//30=大局记录列表
	//31=小局记局表表(game_round_records)
	//32=小局记局(单个)(game_round_record)

	optional TableResponse table = 2;//桌子

	repeated RoomPlayerResponse players = 3;		//牌桌玩家

	optional GameStartResponse gameStart = 14;
	optional RoomInfo room_info = 15;				//房间信息
	optional int32 game_status = 16;				//房间状态

	optional int32  operate_player = 8;				//操作用户
	optional int32  provide_player = 9;				//供应用户
	optional int64  operate_code = 10;				//操作代码
	optional int32  operate_card = 11;				//操作扑克

	optional int32 card_target = 34;//牌的对象

	//玩家状态


	optional GameEndResponse game_end = 18;

	optional int32 show_direct = 19;

	repeated PlayerResultResponse game_room_records = 20;
	repeated GameEndResponse game_round_records = 21;

	repeated int64 chi_hu_rights = 22;

	repeated int32 release_players = 26;
	optional int32 request_player_seat = 27;
	optional int64 left_time = 28;

	optional int64 release_time = 30;

	//麻将牌相关的 出显示牌 未进入牌堆,或者是手牌相关
	optional int32 card_count = 12;//牌数量
	repeated int32 card_data = 13;//牌
	optional int32 card_type = 33;//牌的类型

	optional int32 operate_len = 32;
	//基础信息
	optional int32 left_card_count = 23;
	optional int32 current_player = 25;
	optional int32 target = 42;
	repeated int32 player_status = 24;
	repeated int32 card_status = 47;//牌型状态
	//表情
	optional int32 emjoy_id = 31;

	//语音
	optional bytes audio_chat = 29;
	optional float audio_len = 40;//音效长度
	optional int32 audio_size = 41;

	//组合数据
	repeated WeaveItemResponse weave_items = 17;
	optional int32 weave_count = 44;

	//效果
	repeated int64 effects_index = 35;
	optional int32 effect_time = 36;
	optional int32 effect_count = 43;
	optional int32 effect_type = 45;

	repeated int32 especial_show_cards = 50;

	//操作
	repeated int64 actions = 38;//长度为0,关闭操作条

	repeated int32 chi_hu_cards = 49;

	optional int32 room_id = 46;//房间id,当前用于方便查询日志

	//子局详细
	optional GameEndResponse game_round_record = 48;


	//牌局过程结算
	repeated float score = 51;
	repeated float opereate_score = 55;
	optional int32 score_type = 52;

	//牌局特殊显示的描述
	optional string especial_txt = 53;
	optional int32 especial_txt_type = 54;

	optional int32 discard_index = 56;

	optional int32 flash_time = 57;
	optional int32 stand_time = 58;


}

//提示总返回
message MsgAllResponse{
	optional int32 type = 1;//返回类型 1=普通提示(msg) 2=带错误码的普通消息 3=带错误码有确定按钮的消息
	optional string msg = 2;//提示内容
	optional int32 error_id = 3;
}
//游戏公告
message GameNoticeAllResponse{
	optional int32 type = 1;//返回类型  1=普通公告(只在大厅显示),2=通知类型(无论在哪里都要提示)
	optional string msg = 2;//消息内容
}
//我的压力测试请求
message MyTestRequest{
	optional int32 type = 1;//请求类型 1=普通消息请求()


}
//我的压力测试返回
message MyTestResponse{
	//返回类型 1=普通消息返回   100=通知客户端进行多少次type=1的请求,客户端限制一下最大值(num)
	optional int32 type = 1;
	optional int32 num = 2;//次数
}


//其它系统请求
message OtherSystemRequest{
	optional int32 type = 1;//请求类型 1=查看系统公告 2=游戏玩法说明 3=主界面公告
}
//游戏玩法说明详细项
message GaemDescItemResponse{
	optional int32 id = 1;//id 1=转转 2=长沙
	optional string title = 2;//标题
	optional string game_desc = 3;//详细说明
	optional int32 sort = 4;//排序
}
//主界面公告详细项
message MainUiNoticeItemResponse {
	optional int32 id = 1;
	optional int32 type = 2;//1=文字 2=图片url
	optional string content = 3;
	optional string href = 4;
}
//登录公告
message LoginNoticeResponse {
	optional string title = 1;//标题
	optional string content = 2;//内容
}
//其它系统返回
message OtherSystemResponse{
	optional int32 type = 1;//返回类型 1=系统公告内容(content) 2=游戏玩法说明(gaemDescItemResponseList) 3=主界面公告(mainUiNoticeItemResponseList) 4=登录公告(loginNoticeResponse)
	optional string content = 2;//内容
	repeated GaemDescItemResponse gaemDescItemResponseList = 3;
	repeated MainUiNoticeItemResponse mainUiNoticeItemResponseList = 4;
	optional LoginNoticeResponse loginNoticeResponse = 5;//登录公告
}

//商城请求
message StoreRequest{
	optional int32 type = 1;//请求类型 1=房卡功能状态 2=商城列表 3=购买商品(goods_id) 4=微信支付成功(gameOrderId发送游戏订单号--失败的不用发这个协议)
	optional int32 goods_id = 2;//商品id
	optional string gameOrderId = 3;//游戏订单号
}
//商城商品
message StoreGoodResponse{
	optional int32 id = 1;//商品id
	optional string name = 2;//商品名
	optional int32 gold = 3;//房卡数量
	optional int32 send_gold = 4;//赠送的房卡数量
	optional int32 price = 5;//价格
	optional string icon = 6;//icon
}

//商城购买返回
message PayBuyResponse{
	optional string appid = 1;//appId
	optional string timestamp = 2;//时间搓格式
	optional string noncestr = 3;//随机字符串
	optional string package = 4;//扩展字段
	optional string sign = 6;//签名
	optional string partnerid =7;//商户号
	optional string prepayid=8;//预支付交易会话ID
	optional string gameOrderID=9;//游戏内订单--支付成功了发给服务器
}

//商城总返回
message StoreAllResponse{
	optional int32 type = 1;//返回类型 1=返回房卡功能状态(status,msg) 2=商品列表(storeGoodResponseList) 3=购买返回(payBuyResponse)
	optional int32 status = 2;//状态
	optional string msg = 3;//提示内容
	repeated StoreGoodResponse storeGoodResponseList = 4;//商品列表
	optional PayBuyResponse payBuyResponse = 5;//商城购买返回

}
//房卡相关请求
message GoldCardRequest{
	//请求类型  1=修改密码(old_passwd[没有首次可不填],new_passwd) 2=赠送他人房卡(num,target_account_id,verify,old_passwd)
	//3=代理转卡历史记录(curr_page,默认填1,target_account_id[没有不要传值])
	//4=查看代理商城  5=购买代理商品(goods_id) 6=微信支付成功(gameOrderId发送游戏订单号--失败的不用发这个协议)
	optional int32 type = 1;
	optional string old_passwd = 2;//旧密码
	optional string new_passwd = 3;//新密码
	optional int32 num = 4;//数量
	optional int64 target_account_id = 5;//目标账户id
	optional bool verify = 6;//确认
	optional int32 cur_page = 7;//当前页
	optional int32 goods_id = 8;//商品id
	optional string gameOrderId = 9;//游戏订单号

}
//房卡转卡记录
message AddGoldCardHistoryResponse{
	optional string id = 1;
	optional int64 create_time = 2;//创建时间
	optional int64 target_account_id = 3;//目标账号id
	optional int64 give_num = 4;//赠送数量
	optional string account_ip = 5;//操作ip
	optional int32 code = 6;//操作状态  0成功
	optional string target_nick_name = 7;//目标昵称
}
//房卡相关总返回
message GoldCardAllResponse{
	//总返回类型
	//1=转卡确认前查询(target_account_id,target_nick_name)
	//2=历史转卡记录分页的(addGoldCardHistoryResponseList,cur_page,page_size,total_page,total_size,target_account_id[可选值])
	//3=修改密码成功
	//4=转卡成功
	//5=代理商城列表(storeGoodResponseList)
	//6=购买返回(payBuyResponse)
	optional int32 type = 1;
	optional int64 target_account_id = 2;//目标账号id
	optional string target_nick_name = 3;//目标昵称
	repeated AddGoldCardHistoryResponse addGoldCardHistoryResponseList = 4;//历史记录集合
	optional int32 cur_page = 5;//当前页
	optional int32 page_size = 6;//每页条数
	optional int32 total_page = 7;//总页数
	optional int32 total_size = 8;//总记录数
	repeated StoreGoodResponse storeGoodResponseList = 9;//代理商品列表
	optional PayBuyResponse payBuyResponse = 10;//代理商城购买返回
}
//=================================================================================

//总返回
 message Response {
 	extensions 100 to max;
 	enum ResponseType {
 	HEAR = 1;//心跳
	LOING = 2; //登录(loginRequest)
	REGISTER = 3; //注册()
	ROOM = 4;//房间总返回(roomResponse)
	MSG = 5;//提示(MsgAllResponse)
	PROPERTY = 6;//通用属性值(accountPropertyListResponse)
	GAME_NOTICE = 7;//游戏公告(gameNoticeAllResponse)
	MY_TEST = 8;//我的压力测试(myTestResponse)
	OTHER_SYS = 9;//其它系统(otherSystemResponse)
	Store = 10;//商城(storeAllResponse)
	GOLD_CARD = 11;//房卡相关
  }
 	required ResponseType responseType = 1;//返回类型
}
extend Response {
  optional HeartResponse heartResponse = 100;
  optional LoginResponse loginResponse = 101;
  optional RoomResponse roomResponse = 102;
  optional MsgAllResponse msgAllResponse = 103;
  optional AccountPropertyListResponse accountPropertyListResponse = 104;
  optional GameNoticeAllResponse gameNoticeAllResponse = 105;
  optional MyTestResponse myTestResponse = 106;
  optional OtherSystemResponse otherSystemResponse = 107;
  optional StoreAllResponse storeAllResponse = 108;
  optional GoldCardAllResponse goldCardAllResponse = 109;
}

//总请求
message Request { 
  extensions 100 to max;
  enum RequestType {
  	HEAR = 1;
	LOING = 2; //登录(loginRequest)
	REGISTER = 3; //注册()
	PROXY = 4;//逻辑到转发的总请求(response)
	ROOM = 5;//房间请求(roomRequest)
	LOGIC_ROOM = 6;//逻辑服房间请求
	MY_TEST = 7;//我的压力测试(myTestRequest)
	OTHER_SYS = 8;//其它系统功能(otherSystemRequest)
	STORE = 9;//商城(storeRequest)
	GOLD_CARD = 10;//房卡相关(goldCardRequest)
  }
  required RequestType requestType = 1;//请求类型
  optional string md5 = 2;
  optional int32 seq = 3;
  optional int64 session_id = 4;
  optional int32 logic_id = 5;//逻辑服id标识,逻辑服与转发服通信
  optional int32 prox_id = 6;//转发服id标识,转发与逻辑服通信
  optional int64 prox_seesion_id = 7;//在代理服的session_id
  optional int32 game_id = 8;//游戏类型
  optional int64 proxy_account_id = 9;//玩家账号id
}
extend Request {
  optional HeartRequest heartRequest = 100;
  optional LoginRequest loginRequest = 101;
  optional Response response = 102;
  optional RoomRequest roomRequest = 103;
  optional LogicRoomRequest logicRoomRequest = 104;
  optional MyTestRequest myTestRequest = 105;
  optional OtherSystemRequest otherSystemRequest = 106;
  optional StoreRequest storeRequest = 107;
  optional GoldCardRequest goldCardRequest = 108;
}

 
 
