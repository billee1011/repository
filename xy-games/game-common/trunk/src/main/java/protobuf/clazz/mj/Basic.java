// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mj/basic.proto

package protobuf.clazz.mj;

public final class Basic {
  private Basic() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MJ_Game_End_BasicOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated bool is_ting_when_finish = 1;
    /**
     * <code>repeated bool is_ting_when_finish = 1;</code>
     *
     * <pre>
     * 戏结束时，是否是听牌状态
     * </pre>
     */
    java.util.List<java.lang.Boolean> getIsTingWhenFinishList();
    /**
     * <code>repeated bool is_ting_when_finish = 1;</code>
     *
     * <pre>
     * 戏结束时，是否是听牌状态
     * </pre>
     */
    int getIsTingWhenFinishCount();
    /**
     * <code>repeated bool is_ting_when_finish = 1;</code>
     *
     * <pre>
     * 戏结束时，是否是听牌状态
     * </pre>
     */
    boolean getIsTingWhenFinish(int index);

    // repeated int32 who_provided = 2;
    /**
     * <code>repeated int32 who_provided = 2;</code>
     *
     * <pre>
     * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
     * </pre>
     */
    java.util.List<java.lang.Integer> getWhoProvidedList();
    /**
     * <code>repeated int32 who_provided = 2;</code>
     *
     * <pre>
     * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
     * </pre>
     */
    int getWhoProvidedCount();
    /**
     * <code>repeated int32 who_provided = 2;</code>
     *
     * <pre>
     * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
     * </pre>
     */
    int getWhoProvided(int index);

    // repeated int32 finally_fan_shu = 3;
    /**
     * <code>repeated int32 finally_fan_shu = 3;</code>
     *
     * <pre>
     * 玩家最后的番数或分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getFinallyFanShuList();
    /**
     * <code>repeated int32 finally_fan_shu = 3;</code>
     *
     * <pre>
     * 玩家最后的番数或分数
     * </pre>
     */
    int getFinallyFanShuCount();
    /**
     * <code>repeated int32 finally_fan_shu = 3;</code>
     *
     * <pre>
     * 玩家最后的番数或分数
     * </pre>
     */
    int getFinallyFanShu(int index);

    // repeated .mj.ScoreRow allScoreDetails = 4;
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Basic.ScoreRow> 
        getAllScoreDetailsList();
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    protobuf.clazz.mj.Basic.ScoreRow getAllScoreDetails(int index);
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    int getAllScoreDetailsCount();
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Basic.ScoreRowOrBuilder> 
        getAllScoreDetailsOrBuilderList();
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    protobuf.clazz.mj.Basic.ScoreRowOrBuilder getAllScoreDetailsOrBuilder(
        int index);

    // repeated .mj.PaiXingList allPaiXingList = 5;
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Basic.PaiXingList> 
        getAllPaiXingListList();
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    protobuf.clazz.mj.Basic.PaiXingList getAllPaiXingList(int index);
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    int getAllPaiXingListCount();
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Basic.PaiXingListOrBuilder> 
        getAllPaiXingListOrBuilderList();
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    protobuf.clazz.mj.Basic.PaiXingListOrBuilder getAllPaiXingListOrBuilder(
        int index);

    // repeated int32 pao = 33;
    /**
     * <code>repeated int32 pao = 33;</code>
     *
     * <pre>
     * 跑分
     * </pre>
     */
    java.util.List<java.lang.Integer> getPaoList();
    /**
     * <code>repeated int32 pao = 33;</code>
     *
     * <pre>
     * 跑分
     * </pre>
     */
    int getPaoCount();
    /**
     * <code>repeated int32 pao = 33;</code>
     *
     * <pre>
     * 跑分
     * </pre>
     */
    int getPao(int index);

    // repeated int32 piao = 34;
    /**
     * <code>repeated int32 piao = 34;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    java.util.List<java.lang.Integer> getPiaoList();
    /**
     * <code>repeated int32 piao = 34;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    int getPiaoCount();
    /**
     * <code>repeated int32 piao = 34;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    int getPiao(int index);

    // repeated int32 qiang = 35;
    /**
     * <code>repeated int32 qiang = 35;</code>
     *
     * <pre>
     * 呛分
     * </pre>
     */
    java.util.List<java.lang.Integer> getQiangList();
    /**
     * <code>repeated int32 qiang = 35;</code>
     *
     * <pre>
     * 呛分
     * </pre>
     */
    int getQiangCount();
    /**
     * <code>repeated int32 qiang = 35;</code>
     *
     * <pre>
     * 呛分
     * </pre>
     */
    int getQiang(int index);

    // repeated int32 nao = 36;
    /**
     * <code>repeated int32 nao = 36;</code>
     *
     * <pre>
     * 闹分
     * </pre>
     */
    java.util.List<java.lang.Integer> getNaoList();
    /**
     * <code>repeated int32 nao = 36;</code>
     *
     * <pre>
     * 闹分
     * </pre>
     */
    int getNaoCount();
    /**
     * <code>repeated int32 nao = 36;</code>
     *
     * <pre>
     * 闹分
     * </pre>
     */
    int getNao(int index);

    // repeated int32 pao_tou = 37;
    /**
     * <code>repeated int32 pao_tou = 37;</code>
     *
     * <pre>
     * 跑头
     * </pre>
     */
    java.util.List<java.lang.Integer> getPaoTouList();
    /**
     * <code>repeated int32 pao_tou = 37;</code>
     *
     * <pre>
     * 跑头
     * </pre>
     */
    int getPaoTouCount();
    /**
     * <code>repeated int32 pao_tou = 37;</code>
     *
     * <pre>
     * 跑头
     * </pre>
     */
    int getPaoTou(int index);

    // repeated int32 pao_kou = 38;
    /**
     * <code>repeated int32 pao_kou = 38;</code>
     *
     * <pre>
     * 跑扣
     * </pre>
     */
    java.util.List<java.lang.Integer> getPaoKouList();
    /**
     * <code>repeated int32 pao_kou = 38;</code>
     *
     * <pre>
     * 跑扣
     * </pre>
     */
    int getPaoKouCount();
    /**
     * <code>repeated int32 pao_kou = 38;</code>
     *
     * <pre>
     * 跑扣
     * </pre>
     */
    int getPaoKou(int index);

    // repeated int32 bian_yan = 39;
    /**
     * <code>repeated int32 bian_yan = 39;</code>
     *
     * <pre>
     * 表演
     * </pre>
     */
    java.util.List<java.lang.Integer> getBianYanList();
    /**
     * <code>repeated int32 bian_yan = 39;</code>
     *
     * <pre>
     * 表演
     * </pre>
     */
    int getBianYanCount();
    /**
     * <code>repeated int32 bian_yan = 39;</code>
     *
     * <pre>
     * 表演
     * </pre>
     */
    int getBianYan(int index);
  }
  /**
   * Protobuf type {@code mj.MJ_Game_End_Basic}
   */
  public static final class MJ_Game_End_Basic extends
      com.google.protobuf.GeneratedMessage
      implements MJ_Game_End_BasicOrBuilder {
    // Use MJ_Game_End_Basic.newBuilder() to construct.
    private MJ_Game_End_Basic(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MJ_Game_End_Basic(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MJ_Game_End_Basic defaultInstance;
    public static MJ_Game_End_Basic getDefaultInstance() {
      return defaultInstance;
    }

    public MJ_Game_End_Basic getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MJ_Game_End_Basic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                isTingWhenFinish_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000001;
              }
              isTingWhenFinish_.add(input.readBool());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                isTingWhenFinish_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                isTingWhenFinish_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                whoProvided_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              whoProvided_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                whoProvided_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                whoProvided_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                finallyFanShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              finallyFanShu_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                finallyFanShu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                finallyFanShu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                allScoreDetails_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.ScoreRow>();
                mutable_bitField0_ |= 0x00000008;
              }
              allScoreDetails_.add(input.readMessage(protobuf.clazz.mj.Basic.ScoreRow.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                allPaiXingList_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.PaiXingList>();
                mutable_bitField0_ |= 0x00000010;
              }
              allPaiXingList_.add(input.readMessage(protobuf.clazz.mj.Basic.PaiXingList.PARSER, extensionRegistry));
              break;
            }
            case 264: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                pao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              pao_.add(input.readInt32());
              break;
            }
            case 266: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                pao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                pao_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 272: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                piao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              piao_.add(input.readInt32());
              break;
            }
            case 274: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                piao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                piao_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 280: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                qiang_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              qiang_.add(input.readInt32());
              break;
            }
            case 282: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                qiang_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                qiang_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 288: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                nao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              nao_.add(input.readInt32());
              break;
            }
            case 290: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                nao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                nao_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 296: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                paoTou_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              paoTou_.add(input.readInt32());
              break;
            }
            case 298: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                paoTou_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                paoTou_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 304: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                paoKou_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              paoKou_.add(input.readInt32());
              break;
            }
            case 306: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                paoKou_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                paoKou_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 312: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                bianYan_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              bianYan_.add(input.readInt32());
              break;
            }
            case 314: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                bianYan_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                bianYan_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          isTingWhenFinish_ = java.util.Collections.unmodifiableList(isTingWhenFinish_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          whoProvided_ = java.util.Collections.unmodifiableList(whoProvided_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          finallyFanShu_ = java.util.Collections.unmodifiableList(finallyFanShu_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          allScoreDetails_ = java.util.Collections.unmodifiableList(allScoreDetails_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          allPaiXingList_ = java.util.Collections.unmodifiableList(allPaiXingList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          pao_ = java.util.Collections.unmodifiableList(pao_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          piao_ = java.util.Collections.unmodifiableList(piao_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          qiang_ = java.util.Collections.unmodifiableList(qiang_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          nao_ = java.util.Collections.unmodifiableList(nao_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          paoTou_ = java.util.Collections.unmodifiableList(paoTou_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          paoKou_ = java.util.Collections.unmodifiableList(paoKou_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          bianYan_ = java.util.Collections.unmodifiableList(bianYan_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_MJ_Game_End_Basic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_MJ_Game_End_Basic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.MJ_Game_End_Basic.class, protobuf.clazz.mj.Basic.MJ_Game_End_Basic.Builder.class);
    }

    public static com.google.protobuf.Parser<MJ_Game_End_Basic> PARSER =
        new com.google.protobuf.AbstractParser<MJ_Game_End_Basic>() {
      public MJ_Game_End_Basic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MJ_Game_End_Basic(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MJ_Game_End_Basic> getParserForType() {
      return PARSER;
    }

    // repeated bool is_ting_when_finish = 1;
    public static final int IS_TING_WHEN_FINISH_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Boolean> isTingWhenFinish_;
    /**
     * <code>repeated bool is_ting_when_finish = 1;</code>
     *
     * <pre>
     * 戏结束时，是否是听牌状态
     * </pre>
     */
    public java.util.List<java.lang.Boolean>
        getIsTingWhenFinishList() {
      return isTingWhenFinish_;
    }
    /**
     * <code>repeated bool is_ting_when_finish = 1;</code>
     *
     * <pre>
     * 戏结束时，是否是听牌状态
     * </pre>
     */
    public int getIsTingWhenFinishCount() {
      return isTingWhenFinish_.size();
    }
    /**
     * <code>repeated bool is_ting_when_finish = 1;</code>
     *
     * <pre>
     * 戏结束时，是否是听牌状态
     * </pre>
     */
    public boolean getIsTingWhenFinish(int index) {
      return isTingWhenFinish_.get(index);
    }

    // repeated int32 who_provided = 2;
    public static final int WHO_PROVIDED_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> whoProvided_;
    /**
     * <code>repeated int32 who_provided = 2;</code>
     *
     * <pre>
     * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWhoProvidedList() {
      return whoProvided_;
    }
    /**
     * <code>repeated int32 who_provided = 2;</code>
     *
     * <pre>
     * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
     * </pre>
     */
    public int getWhoProvidedCount() {
      return whoProvided_.size();
    }
    /**
     * <code>repeated int32 who_provided = 2;</code>
     *
     * <pre>
     * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
     * </pre>
     */
    public int getWhoProvided(int index) {
      return whoProvided_.get(index);
    }

    // repeated int32 finally_fan_shu = 3;
    public static final int FINALLY_FAN_SHU_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> finallyFanShu_;
    /**
     * <code>repeated int32 finally_fan_shu = 3;</code>
     *
     * <pre>
     * 玩家最后的番数或分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFinallyFanShuList() {
      return finallyFanShu_;
    }
    /**
     * <code>repeated int32 finally_fan_shu = 3;</code>
     *
     * <pre>
     * 玩家最后的番数或分数
     * </pre>
     */
    public int getFinallyFanShuCount() {
      return finallyFanShu_.size();
    }
    /**
     * <code>repeated int32 finally_fan_shu = 3;</code>
     *
     * <pre>
     * 玩家最后的番数或分数
     * </pre>
     */
    public int getFinallyFanShu(int index) {
      return finallyFanShu_.get(index);
    }

    // repeated .mj.ScoreRow allScoreDetails = 4;
    public static final int ALLSCOREDETAILS_FIELD_NUMBER = 4;
    private java.util.List<protobuf.clazz.mj.Basic.ScoreRow> allScoreDetails_;
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Basic.ScoreRow> getAllScoreDetailsList() {
      return allScoreDetails_;
    }
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Basic.ScoreRowOrBuilder> 
        getAllScoreDetailsOrBuilderList() {
      return allScoreDetails_;
    }
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    public int getAllScoreDetailsCount() {
      return allScoreDetails_.size();
    }
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    public protobuf.clazz.mj.Basic.ScoreRow getAllScoreDetails(int index) {
      return allScoreDetails_.get(index);
    }
    /**
     * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
     *
     * <pre>
     * 流水明显
     * </pre>
     */
    public protobuf.clazz.mj.Basic.ScoreRowOrBuilder getAllScoreDetailsOrBuilder(
        int index) {
      return allScoreDetails_.get(index);
    }

    // repeated .mj.PaiXingList allPaiXingList = 5;
    public static final int ALLPAIXINGLIST_FIELD_NUMBER = 5;
    private java.util.List<protobuf.clazz.mj.Basic.PaiXingList> allPaiXingList_;
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Basic.PaiXingList> getAllPaiXingListList() {
      return allPaiXingList_;
    }
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Basic.PaiXingListOrBuilder> 
        getAllPaiXingListOrBuilderList() {
      return allPaiXingList_;
    }
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    public int getAllPaiXingListCount() {
      return allPaiXingList_.size();
    }
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    public protobuf.clazz.mj.Basic.PaiXingList getAllPaiXingList(int index) {
      return allPaiXingList_.get(index);
    }
    /**
     * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
     *
     * <pre>
     * 所有玩家的所有牌型的统计列表
     * </pre>
     */
    public protobuf.clazz.mj.Basic.PaiXingListOrBuilder getAllPaiXingListOrBuilder(
        int index) {
      return allPaiXingList_.get(index);
    }

    // repeated int32 pao = 33;
    public static final int PAO_FIELD_NUMBER = 33;
    private java.util.List<java.lang.Integer> pao_;
    /**
     * <code>repeated int32 pao = 33;</code>
     *
     * <pre>
     * 跑分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPaoList() {
      return pao_;
    }
    /**
     * <code>repeated int32 pao = 33;</code>
     *
     * <pre>
     * 跑分
     * </pre>
     */
    public int getPaoCount() {
      return pao_.size();
    }
    /**
     * <code>repeated int32 pao = 33;</code>
     *
     * <pre>
     * 跑分
     * </pre>
     */
    public int getPao(int index) {
      return pao_.get(index);
    }

    // repeated int32 piao = 34;
    public static final int PIAO_FIELD_NUMBER = 34;
    private java.util.List<java.lang.Integer> piao_;
    /**
     * <code>repeated int32 piao = 34;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPiaoList() {
      return piao_;
    }
    /**
     * <code>repeated int32 piao = 34;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    public int getPiaoCount() {
      return piao_.size();
    }
    /**
     * <code>repeated int32 piao = 34;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    public int getPiao(int index) {
      return piao_.get(index);
    }

    // repeated int32 qiang = 35;
    public static final int QIANG_FIELD_NUMBER = 35;
    private java.util.List<java.lang.Integer> qiang_;
    /**
     * <code>repeated int32 qiang = 35;</code>
     *
     * <pre>
     * 呛分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getQiangList() {
      return qiang_;
    }
    /**
     * <code>repeated int32 qiang = 35;</code>
     *
     * <pre>
     * 呛分
     * </pre>
     */
    public int getQiangCount() {
      return qiang_.size();
    }
    /**
     * <code>repeated int32 qiang = 35;</code>
     *
     * <pre>
     * 呛分
     * </pre>
     */
    public int getQiang(int index) {
      return qiang_.get(index);
    }

    // repeated int32 nao = 36;
    public static final int NAO_FIELD_NUMBER = 36;
    private java.util.List<java.lang.Integer> nao_;
    /**
     * <code>repeated int32 nao = 36;</code>
     *
     * <pre>
     * 闹分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getNaoList() {
      return nao_;
    }
    /**
     * <code>repeated int32 nao = 36;</code>
     *
     * <pre>
     * 闹分
     * </pre>
     */
    public int getNaoCount() {
      return nao_.size();
    }
    /**
     * <code>repeated int32 nao = 36;</code>
     *
     * <pre>
     * 闹分
     * </pre>
     */
    public int getNao(int index) {
      return nao_.get(index);
    }

    // repeated int32 pao_tou = 37;
    public static final int PAO_TOU_FIELD_NUMBER = 37;
    private java.util.List<java.lang.Integer> paoTou_;
    /**
     * <code>repeated int32 pao_tou = 37;</code>
     *
     * <pre>
     * 跑头
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPaoTouList() {
      return paoTou_;
    }
    /**
     * <code>repeated int32 pao_tou = 37;</code>
     *
     * <pre>
     * 跑头
     * </pre>
     */
    public int getPaoTouCount() {
      return paoTou_.size();
    }
    /**
     * <code>repeated int32 pao_tou = 37;</code>
     *
     * <pre>
     * 跑头
     * </pre>
     */
    public int getPaoTou(int index) {
      return paoTou_.get(index);
    }

    // repeated int32 pao_kou = 38;
    public static final int PAO_KOU_FIELD_NUMBER = 38;
    private java.util.List<java.lang.Integer> paoKou_;
    /**
     * <code>repeated int32 pao_kou = 38;</code>
     *
     * <pre>
     * 跑扣
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPaoKouList() {
      return paoKou_;
    }
    /**
     * <code>repeated int32 pao_kou = 38;</code>
     *
     * <pre>
     * 跑扣
     * </pre>
     */
    public int getPaoKouCount() {
      return paoKou_.size();
    }
    /**
     * <code>repeated int32 pao_kou = 38;</code>
     *
     * <pre>
     * 跑扣
     * </pre>
     */
    public int getPaoKou(int index) {
      return paoKou_.get(index);
    }

    // repeated int32 bian_yan = 39;
    public static final int BIAN_YAN_FIELD_NUMBER = 39;
    private java.util.List<java.lang.Integer> bianYan_;
    /**
     * <code>repeated int32 bian_yan = 39;</code>
     *
     * <pre>
     * 表演
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBianYanList() {
      return bianYan_;
    }
    /**
     * <code>repeated int32 bian_yan = 39;</code>
     *
     * <pre>
     * 表演
     * </pre>
     */
    public int getBianYanCount() {
      return bianYan_.size();
    }
    /**
     * <code>repeated int32 bian_yan = 39;</code>
     *
     * <pre>
     * 表演
     * </pre>
     */
    public int getBianYan(int index) {
      return bianYan_.get(index);
    }

    private void initFields() {
      isTingWhenFinish_ = java.util.Collections.emptyList();
      whoProvided_ = java.util.Collections.emptyList();
      finallyFanShu_ = java.util.Collections.emptyList();
      allScoreDetails_ = java.util.Collections.emptyList();
      allPaiXingList_ = java.util.Collections.emptyList();
      pao_ = java.util.Collections.emptyList();
      piao_ = java.util.Collections.emptyList();
      qiang_ = java.util.Collections.emptyList();
      nao_ = java.util.Collections.emptyList();
      paoTou_ = java.util.Collections.emptyList();
      paoKou_ = java.util.Collections.emptyList();
      bianYan_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < isTingWhenFinish_.size(); i++) {
        output.writeBool(1, isTingWhenFinish_.get(i));
      }
      for (int i = 0; i < whoProvided_.size(); i++) {
        output.writeInt32(2, whoProvided_.get(i));
      }
      for (int i = 0; i < finallyFanShu_.size(); i++) {
        output.writeInt32(3, finallyFanShu_.get(i));
      }
      for (int i = 0; i < allScoreDetails_.size(); i++) {
        output.writeMessage(4, allScoreDetails_.get(i));
      }
      for (int i = 0; i < allPaiXingList_.size(); i++) {
        output.writeMessage(5, allPaiXingList_.get(i));
      }
      for (int i = 0; i < pao_.size(); i++) {
        output.writeInt32(33, pao_.get(i));
      }
      for (int i = 0; i < piao_.size(); i++) {
        output.writeInt32(34, piao_.get(i));
      }
      for (int i = 0; i < qiang_.size(); i++) {
        output.writeInt32(35, qiang_.get(i));
      }
      for (int i = 0; i < nao_.size(); i++) {
        output.writeInt32(36, nao_.get(i));
      }
      for (int i = 0; i < paoTou_.size(); i++) {
        output.writeInt32(37, paoTou_.get(i));
      }
      for (int i = 0; i < paoKou_.size(); i++) {
        output.writeInt32(38, paoKou_.get(i));
      }
      for (int i = 0; i < bianYan_.size(); i++) {
        output.writeInt32(39, bianYan_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 1 * getIsTingWhenFinishList().size();
        size += dataSize;
        size += 1 * getIsTingWhenFinishList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < whoProvided_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(whoProvided_.get(i));
        }
        size += dataSize;
        size += 1 * getWhoProvidedList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < finallyFanShu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(finallyFanShu_.get(i));
        }
        size += dataSize;
        size += 1 * getFinallyFanShuList().size();
      }
      for (int i = 0; i < allScoreDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, allScoreDetails_.get(i));
      }
      for (int i = 0; i < allPaiXingList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, allPaiXingList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pao_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pao_.get(i));
        }
        size += dataSize;
        size += 2 * getPaoList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < piao_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(piao_.get(i));
        }
        size += dataSize;
        size += 2 * getPiaoList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < qiang_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(qiang_.get(i));
        }
        size += dataSize;
        size += 2 * getQiangList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nao_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(nao_.get(i));
        }
        size += dataSize;
        size += 2 * getNaoList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < paoTou_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(paoTou_.get(i));
        }
        size += dataSize;
        size += 2 * getPaoTouList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < paoKou_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(paoKou_.get(i));
        }
        size += dataSize;
        size += 2 * getPaoKouList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bianYan_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bianYan_.get(i));
        }
        size += dataSize;
        size += 2 * getBianYanList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.MJ_Game_End_Basic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.MJ_Game_End_Basic prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.MJ_Game_End_Basic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.MJ_Game_End_BasicOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_MJ_Game_End_Basic_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_MJ_Game_End_Basic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.MJ_Game_End_Basic.class, protobuf.clazz.mj.Basic.MJ_Game_End_Basic.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.MJ_Game_End_Basic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAllScoreDetailsFieldBuilder();
          getAllPaiXingListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isTingWhenFinish_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        whoProvided_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        finallyFanShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (allScoreDetailsBuilder_ == null) {
          allScoreDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          allScoreDetailsBuilder_.clear();
        }
        if (allPaiXingListBuilder_ == null) {
          allPaiXingList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          allPaiXingListBuilder_.clear();
        }
        pao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        piao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        qiang_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        nao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        paoTou_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        paoKou_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        bianYan_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_MJ_Game_End_Basic_descriptor;
      }

      public protobuf.clazz.mj.Basic.MJ_Game_End_Basic getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.MJ_Game_End_Basic.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.MJ_Game_End_Basic build() {
        protobuf.clazz.mj.Basic.MJ_Game_End_Basic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.MJ_Game_End_Basic buildPartial() {
        protobuf.clazz.mj.Basic.MJ_Game_End_Basic result = new protobuf.clazz.mj.Basic.MJ_Game_End_Basic(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          isTingWhenFinish_ = java.util.Collections.unmodifiableList(isTingWhenFinish_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.isTingWhenFinish_ = isTingWhenFinish_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          whoProvided_ = java.util.Collections.unmodifiableList(whoProvided_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.whoProvided_ = whoProvided_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          finallyFanShu_ = java.util.Collections.unmodifiableList(finallyFanShu_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.finallyFanShu_ = finallyFanShu_;
        if (allScoreDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            allScoreDetails_ = java.util.Collections.unmodifiableList(allScoreDetails_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.allScoreDetails_ = allScoreDetails_;
        } else {
          result.allScoreDetails_ = allScoreDetailsBuilder_.build();
        }
        if (allPaiXingListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            allPaiXingList_ = java.util.Collections.unmodifiableList(allPaiXingList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.allPaiXingList_ = allPaiXingList_;
        } else {
          result.allPaiXingList_ = allPaiXingListBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          pao_ = java.util.Collections.unmodifiableList(pao_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.pao_ = pao_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          piao_ = java.util.Collections.unmodifiableList(piao_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.piao_ = piao_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          qiang_ = java.util.Collections.unmodifiableList(qiang_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.qiang_ = qiang_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          nao_ = java.util.Collections.unmodifiableList(nao_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.nao_ = nao_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          paoTou_ = java.util.Collections.unmodifiableList(paoTou_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.paoTou_ = paoTou_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          paoKou_ = java.util.Collections.unmodifiableList(paoKou_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.paoKou_ = paoKou_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          bianYan_ = java.util.Collections.unmodifiableList(bianYan_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.bianYan_ = bianYan_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.MJ_Game_End_Basic) {
          return mergeFrom((protobuf.clazz.mj.Basic.MJ_Game_End_Basic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.MJ_Game_End_Basic other) {
        if (other == protobuf.clazz.mj.Basic.MJ_Game_End_Basic.getDefaultInstance()) return this;
        if (!other.isTingWhenFinish_.isEmpty()) {
          if (isTingWhenFinish_.isEmpty()) {
            isTingWhenFinish_ = other.isTingWhenFinish_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIsTingWhenFinishIsMutable();
            isTingWhenFinish_.addAll(other.isTingWhenFinish_);
          }
          onChanged();
        }
        if (!other.whoProvided_.isEmpty()) {
          if (whoProvided_.isEmpty()) {
            whoProvided_ = other.whoProvided_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureWhoProvidedIsMutable();
            whoProvided_.addAll(other.whoProvided_);
          }
          onChanged();
        }
        if (!other.finallyFanShu_.isEmpty()) {
          if (finallyFanShu_.isEmpty()) {
            finallyFanShu_ = other.finallyFanShu_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFinallyFanShuIsMutable();
            finallyFanShu_.addAll(other.finallyFanShu_);
          }
          onChanged();
        }
        if (allScoreDetailsBuilder_ == null) {
          if (!other.allScoreDetails_.isEmpty()) {
            if (allScoreDetails_.isEmpty()) {
              allScoreDetails_ = other.allScoreDetails_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureAllScoreDetailsIsMutable();
              allScoreDetails_.addAll(other.allScoreDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.allScoreDetails_.isEmpty()) {
            if (allScoreDetailsBuilder_.isEmpty()) {
              allScoreDetailsBuilder_.dispose();
              allScoreDetailsBuilder_ = null;
              allScoreDetails_ = other.allScoreDetails_;
              bitField0_ = (bitField0_ & ~0x00000008);
              allScoreDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllScoreDetailsFieldBuilder() : null;
            } else {
              allScoreDetailsBuilder_.addAllMessages(other.allScoreDetails_);
            }
          }
        }
        if (allPaiXingListBuilder_ == null) {
          if (!other.allPaiXingList_.isEmpty()) {
            if (allPaiXingList_.isEmpty()) {
              allPaiXingList_ = other.allPaiXingList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureAllPaiXingListIsMutable();
              allPaiXingList_.addAll(other.allPaiXingList_);
            }
            onChanged();
          }
        } else {
          if (!other.allPaiXingList_.isEmpty()) {
            if (allPaiXingListBuilder_.isEmpty()) {
              allPaiXingListBuilder_.dispose();
              allPaiXingListBuilder_ = null;
              allPaiXingList_ = other.allPaiXingList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              allPaiXingListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllPaiXingListFieldBuilder() : null;
            } else {
              allPaiXingListBuilder_.addAllMessages(other.allPaiXingList_);
            }
          }
        }
        if (!other.pao_.isEmpty()) {
          if (pao_.isEmpty()) {
            pao_ = other.pao_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePaoIsMutable();
            pao_.addAll(other.pao_);
          }
          onChanged();
        }
        if (!other.piao_.isEmpty()) {
          if (piao_.isEmpty()) {
            piao_ = other.piao_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePiaoIsMutable();
            piao_.addAll(other.piao_);
          }
          onChanged();
        }
        if (!other.qiang_.isEmpty()) {
          if (qiang_.isEmpty()) {
            qiang_ = other.qiang_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureQiangIsMutable();
            qiang_.addAll(other.qiang_);
          }
          onChanged();
        }
        if (!other.nao_.isEmpty()) {
          if (nao_.isEmpty()) {
            nao_ = other.nao_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureNaoIsMutable();
            nao_.addAll(other.nao_);
          }
          onChanged();
        }
        if (!other.paoTou_.isEmpty()) {
          if (paoTou_.isEmpty()) {
            paoTou_ = other.paoTou_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensurePaoTouIsMutable();
            paoTou_.addAll(other.paoTou_);
          }
          onChanged();
        }
        if (!other.paoKou_.isEmpty()) {
          if (paoKou_.isEmpty()) {
            paoKou_ = other.paoKou_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensurePaoKouIsMutable();
            paoKou_.addAll(other.paoKou_);
          }
          onChanged();
        }
        if (!other.bianYan_.isEmpty()) {
          if (bianYan_.isEmpty()) {
            bianYan_ = other.bianYan_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureBianYanIsMutable();
            bianYan_.addAll(other.bianYan_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.MJ_Game_End_Basic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.MJ_Game_End_Basic) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated bool is_ting_when_finish = 1;
      private java.util.List<java.lang.Boolean> isTingWhenFinish_ = java.util.Collections.emptyList();
      private void ensureIsTingWhenFinishIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          isTingWhenFinish_ = new java.util.ArrayList<java.lang.Boolean>(isTingWhenFinish_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bool is_ting_when_finish = 1;</code>
       *
       * <pre>
       * 戏结束时，是否是听牌状态
       * </pre>
       */
      public java.util.List<java.lang.Boolean>
          getIsTingWhenFinishList() {
        return java.util.Collections.unmodifiableList(isTingWhenFinish_);
      }
      /**
       * <code>repeated bool is_ting_when_finish = 1;</code>
       *
       * <pre>
       * 戏结束时，是否是听牌状态
       * </pre>
       */
      public int getIsTingWhenFinishCount() {
        return isTingWhenFinish_.size();
      }
      /**
       * <code>repeated bool is_ting_when_finish = 1;</code>
       *
       * <pre>
       * 戏结束时，是否是听牌状态
       * </pre>
       */
      public boolean getIsTingWhenFinish(int index) {
        return isTingWhenFinish_.get(index);
      }
      /**
       * <code>repeated bool is_ting_when_finish = 1;</code>
       *
       * <pre>
       * 戏结束时，是否是听牌状态
       * </pre>
       */
      public Builder setIsTingWhenFinish(
          int index, boolean value) {
        ensureIsTingWhenFinishIsMutable();
        isTingWhenFinish_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_ting_when_finish = 1;</code>
       *
       * <pre>
       * 戏结束时，是否是听牌状态
       * </pre>
       */
      public Builder addIsTingWhenFinish(boolean value) {
        ensureIsTingWhenFinishIsMutable();
        isTingWhenFinish_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_ting_when_finish = 1;</code>
       *
       * <pre>
       * 戏结束时，是否是听牌状态
       * </pre>
       */
      public Builder addAllIsTingWhenFinish(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsTingWhenFinishIsMutable();
        super.addAll(values, isTingWhenFinish_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool is_ting_when_finish = 1;</code>
       *
       * <pre>
       * 戏结束时，是否是听牌状态
       * </pre>
       */
      public Builder clearIsTingWhenFinish() {
        isTingWhenFinish_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 who_provided = 2;
      private java.util.List<java.lang.Integer> whoProvided_ = java.util.Collections.emptyList();
      private void ensureWhoProvidedIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          whoProvided_ = new java.util.ArrayList<java.lang.Integer>(whoProvided_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 who_provided = 2;</code>
       *
       * <pre>
       * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWhoProvidedList() {
        return java.util.Collections.unmodifiableList(whoProvided_);
      }
      /**
       * <code>repeated int32 who_provided = 2;</code>
       *
       * <pre>
       * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
       * </pre>
       */
      public int getWhoProvidedCount() {
        return whoProvided_.size();
      }
      /**
       * <code>repeated int32 who_provided = 2;</code>
       *
       * <pre>
       * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
       * </pre>
       */
      public int getWhoProvided(int index) {
        return whoProvided_.get(index);
      }
      /**
       * <code>repeated int32 who_provided = 2;</code>
       *
       * <pre>
       * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
       * </pre>
       */
      public Builder setWhoProvided(
          int index, int value) {
        ensureWhoProvidedIsMutable();
        whoProvided_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 who_provided = 2;</code>
       *
       * <pre>
       * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
       * </pre>
       */
      public Builder addWhoProvided(int value) {
        ensureWhoProvidedIsMutable();
        whoProvided_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 who_provided = 2;</code>
       *
       * <pre>
       * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
       * </pre>
       */
      public Builder addAllWhoProvided(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWhoProvidedIsMutable();
        super.addAll(values, whoProvided_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 who_provided = 2;</code>
       *
       * <pre>
       * 胡牌的提供者是谁，-1表示没胡，0本人（表示自摸），1上家，2对家，3下家
       * </pre>
       */
      public Builder clearWhoProvided() {
        whoProvided_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 finally_fan_shu = 3;
      private java.util.List<java.lang.Integer> finallyFanShu_ = java.util.Collections.emptyList();
      private void ensureFinallyFanShuIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          finallyFanShu_ = new java.util.ArrayList<java.lang.Integer>(finallyFanShu_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 finally_fan_shu = 3;</code>
       *
       * <pre>
       * 玩家最后的番数或分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFinallyFanShuList() {
        return java.util.Collections.unmodifiableList(finallyFanShu_);
      }
      /**
       * <code>repeated int32 finally_fan_shu = 3;</code>
       *
       * <pre>
       * 玩家最后的番数或分数
       * </pre>
       */
      public int getFinallyFanShuCount() {
        return finallyFanShu_.size();
      }
      /**
       * <code>repeated int32 finally_fan_shu = 3;</code>
       *
       * <pre>
       * 玩家最后的番数或分数
       * </pre>
       */
      public int getFinallyFanShu(int index) {
        return finallyFanShu_.get(index);
      }
      /**
       * <code>repeated int32 finally_fan_shu = 3;</code>
       *
       * <pre>
       * 玩家最后的番数或分数
       * </pre>
       */
      public Builder setFinallyFanShu(
          int index, int value) {
        ensureFinallyFanShuIsMutable();
        finallyFanShu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 finally_fan_shu = 3;</code>
       *
       * <pre>
       * 玩家最后的番数或分数
       * </pre>
       */
      public Builder addFinallyFanShu(int value) {
        ensureFinallyFanShuIsMutable();
        finallyFanShu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 finally_fan_shu = 3;</code>
       *
       * <pre>
       * 玩家最后的番数或分数
       * </pre>
       */
      public Builder addAllFinallyFanShu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFinallyFanShuIsMutable();
        super.addAll(values, finallyFanShu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 finally_fan_shu = 3;</code>
       *
       * <pre>
       * 玩家最后的番数或分数
       * </pre>
       */
      public Builder clearFinallyFanShu() {
        finallyFanShu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated .mj.ScoreRow allScoreDetails = 4;
      private java.util.List<protobuf.clazz.mj.Basic.ScoreRow> allScoreDetails_ =
        java.util.Collections.emptyList();
      private void ensureAllScoreDetailsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          allScoreDetails_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.ScoreRow>(allScoreDetails_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.ScoreRow, protobuf.clazz.mj.Basic.ScoreRow.Builder, protobuf.clazz.mj.Basic.ScoreRowOrBuilder> allScoreDetailsBuilder_;

      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.ScoreRow> getAllScoreDetailsList() {
        if (allScoreDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allScoreDetails_);
        } else {
          return allScoreDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public int getAllScoreDetailsCount() {
        if (allScoreDetailsBuilder_ == null) {
          return allScoreDetails_.size();
        } else {
          return allScoreDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public protobuf.clazz.mj.Basic.ScoreRow getAllScoreDetails(int index) {
        if (allScoreDetailsBuilder_ == null) {
          return allScoreDetails_.get(index);
        } else {
          return allScoreDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder setAllScoreDetails(
          int index, protobuf.clazz.mj.Basic.ScoreRow value) {
        if (allScoreDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllScoreDetailsIsMutable();
          allScoreDetails_.set(index, value);
          onChanged();
        } else {
          allScoreDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder setAllScoreDetails(
          int index, protobuf.clazz.mj.Basic.ScoreRow.Builder builderForValue) {
        if (allScoreDetailsBuilder_ == null) {
          ensureAllScoreDetailsIsMutable();
          allScoreDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          allScoreDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder addAllScoreDetails(protobuf.clazz.mj.Basic.ScoreRow value) {
        if (allScoreDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllScoreDetailsIsMutable();
          allScoreDetails_.add(value);
          onChanged();
        } else {
          allScoreDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder addAllScoreDetails(
          int index, protobuf.clazz.mj.Basic.ScoreRow value) {
        if (allScoreDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllScoreDetailsIsMutable();
          allScoreDetails_.add(index, value);
          onChanged();
        } else {
          allScoreDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder addAllScoreDetails(
          protobuf.clazz.mj.Basic.ScoreRow.Builder builderForValue) {
        if (allScoreDetailsBuilder_ == null) {
          ensureAllScoreDetailsIsMutable();
          allScoreDetails_.add(builderForValue.build());
          onChanged();
        } else {
          allScoreDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder addAllScoreDetails(
          int index, protobuf.clazz.mj.Basic.ScoreRow.Builder builderForValue) {
        if (allScoreDetailsBuilder_ == null) {
          ensureAllScoreDetailsIsMutable();
          allScoreDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          allScoreDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder addAllAllScoreDetails(
          java.lang.Iterable<? extends protobuf.clazz.mj.Basic.ScoreRow> values) {
        if (allScoreDetailsBuilder_ == null) {
          ensureAllScoreDetailsIsMutable();
          super.addAll(values, allScoreDetails_);
          onChanged();
        } else {
          allScoreDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder clearAllScoreDetails() {
        if (allScoreDetailsBuilder_ == null) {
          allScoreDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          allScoreDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public Builder removeAllScoreDetails(int index) {
        if (allScoreDetailsBuilder_ == null) {
          ensureAllScoreDetailsIsMutable();
          allScoreDetails_.remove(index);
          onChanged();
        } else {
          allScoreDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public protobuf.clazz.mj.Basic.ScoreRow.Builder getAllScoreDetailsBuilder(
          int index) {
        return getAllScoreDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public protobuf.clazz.mj.Basic.ScoreRowOrBuilder getAllScoreDetailsOrBuilder(
          int index) {
        if (allScoreDetailsBuilder_ == null) {
          return allScoreDetails_.get(index);  } else {
          return allScoreDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Basic.ScoreRowOrBuilder> 
           getAllScoreDetailsOrBuilderList() {
        if (allScoreDetailsBuilder_ != null) {
          return allScoreDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allScoreDetails_);
        }
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public protobuf.clazz.mj.Basic.ScoreRow.Builder addAllScoreDetailsBuilder() {
        return getAllScoreDetailsFieldBuilder().addBuilder(
            protobuf.clazz.mj.Basic.ScoreRow.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public protobuf.clazz.mj.Basic.ScoreRow.Builder addAllScoreDetailsBuilder(
          int index) {
        return getAllScoreDetailsFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Basic.ScoreRow.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.ScoreRow allScoreDetails = 4;</code>
       *
       * <pre>
       * 流水明显
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.ScoreRow.Builder> 
           getAllScoreDetailsBuilderList() {
        return getAllScoreDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.ScoreRow, protobuf.clazz.mj.Basic.ScoreRow.Builder, protobuf.clazz.mj.Basic.ScoreRowOrBuilder> 
          getAllScoreDetailsFieldBuilder() {
        if (allScoreDetailsBuilder_ == null) {
          allScoreDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Basic.ScoreRow, protobuf.clazz.mj.Basic.ScoreRow.Builder, protobuf.clazz.mj.Basic.ScoreRowOrBuilder>(
                  allScoreDetails_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          allScoreDetails_ = null;
        }
        return allScoreDetailsBuilder_;
      }

      // repeated .mj.PaiXingList allPaiXingList = 5;
      private java.util.List<protobuf.clazz.mj.Basic.PaiXingList> allPaiXingList_ =
        java.util.Collections.emptyList();
      private void ensureAllPaiXingListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          allPaiXingList_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.PaiXingList>(allPaiXingList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.PaiXingList, protobuf.clazz.mj.Basic.PaiXingList.Builder, protobuf.clazz.mj.Basic.PaiXingListOrBuilder> allPaiXingListBuilder_;

      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.PaiXingList> getAllPaiXingListList() {
        if (allPaiXingListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allPaiXingList_);
        } else {
          return allPaiXingListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public int getAllPaiXingListCount() {
        if (allPaiXingListBuilder_ == null) {
          return allPaiXingList_.size();
        } else {
          return allPaiXingListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXingList getAllPaiXingList(int index) {
        if (allPaiXingListBuilder_ == null) {
          return allPaiXingList_.get(index);
        } else {
          return allPaiXingListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder setAllPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXingList value) {
        if (allPaiXingListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllPaiXingListIsMutable();
          allPaiXingList_.set(index, value);
          onChanged();
        } else {
          allPaiXingListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder setAllPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXingList.Builder builderForValue) {
        if (allPaiXingListBuilder_ == null) {
          ensureAllPaiXingListIsMutable();
          allPaiXingList_.set(index, builderForValue.build());
          onChanged();
        } else {
          allPaiXingListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder addAllPaiXingList(protobuf.clazz.mj.Basic.PaiXingList value) {
        if (allPaiXingListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllPaiXingListIsMutable();
          allPaiXingList_.add(value);
          onChanged();
        } else {
          allPaiXingListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder addAllPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXingList value) {
        if (allPaiXingListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllPaiXingListIsMutable();
          allPaiXingList_.add(index, value);
          onChanged();
        } else {
          allPaiXingListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder addAllPaiXingList(
          protobuf.clazz.mj.Basic.PaiXingList.Builder builderForValue) {
        if (allPaiXingListBuilder_ == null) {
          ensureAllPaiXingListIsMutable();
          allPaiXingList_.add(builderForValue.build());
          onChanged();
        } else {
          allPaiXingListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder addAllPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXingList.Builder builderForValue) {
        if (allPaiXingListBuilder_ == null) {
          ensureAllPaiXingListIsMutable();
          allPaiXingList_.add(index, builderForValue.build());
          onChanged();
        } else {
          allPaiXingListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder addAllAllPaiXingList(
          java.lang.Iterable<? extends protobuf.clazz.mj.Basic.PaiXingList> values) {
        if (allPaiXingListBuilder_ == null) {
          ensureAllPaiXingListIsMutable();
          super.addAll(values, allPaiXingList_);
          onChanged();
        } else {
          allPaiXingListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder clearAllPaiXingList() {
        if (allPaiXingListBuilder_ == null) {
          allPaiXingList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          allPaiXingListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public Builder removeAllPaiXingList(int index) {
        if (allPaiXingListBuilder_ == null) {
          ensureAllPaiXingListIsMutable();
          allPaiXingList_.remove(index);
          onChanged();
        } else {
          allPaiXingListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXingList.Builder getAllPaiXingListBuilder(
          int index) {
        return getAllPaiXingListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXingListOrBuilder getAllPaiXingListOrBuilder(
          int index) {
        if (allPaiXingListBuilder_ == null) {
          return allPaiXingList_.get(index);  } else {
          return allPaiXingListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Basic.PaiXingListOrBuilder> 
           getAllPaiXingListOrBuilderList() {
        if (allPaiXingListBuilder_ != null) {
          return allPaiXingListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allPaiXingList_);
        }
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXingList.Builder addAllPaiXingListBuilder() {
        return getAllPaiXingListFieldBuilder().addBuilder(
            protobuf.clazz.mj.Basic.PaiXingList.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXingList.Builder addAllPaiXingListBuilder(
          int index) {
        return getAllPaiXingListFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Basic.PaiXingList.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.PaiXingList allPaiXingList = 5;</code>
       *
       * <pre>
       * 所有玩家的所有牌型的统计列表
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.PaiXingList.Builder> 
           getAllPaiXingListBuilderList() {
        return getAllPaiXingListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.PaiXingList, protobuf.clazz.mj.Basic.PaiXingList.Builder, protobuf.clazz.mj.Basic.PaiXingListOrBuilder> 
          getAllPaiXingListFieldBuilder() {
        if (allPaiXingListBuilder_ == null) {
          allPaiXingListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Basic.PaiXingList, protobuf.clazz.mj.Basic.PaiXingList.Builder, protobuf.clazz.mj.Basic.PaiXingListOrBuilder>(
                  allPaiXingList_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          allPaiXingList_ = null;
        }
        return allPaiXingListBuilder_;
      }

      // repeated int32 pao = 33;
      private java.util.List<java.lang.Integer> pao_ = java.util.Collections.emptyList();
      private void ensurePaoIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          pao_ = new java.util.ArrayList<java.lang.Integer>(pao_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 pao = 33;</code>
       *
       * <pre>
       * 跑分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPaoList() {
        return java.util.Collections.unmodifiableList(pao_);
      }
      /**
       * <code>repeated int32 pao = 33;</code>
       *
       * <pre>
       * 跑分
       * </pre>
       */
      public int getPaoCount() {
        return pao_.size();
      }
      /**
       * <code>repeated int32 pao = 33;</code>
       *
       * <pre>
       * 跑分
       * </pre>
       */
      public int getPao(int index) {
        return pao_.get(index);
      }
      /**
       * <code>repeated int32 pao = 33;</code>
       *
       * <pre>
       * 跑分
       * </pre>
       */
      public Builder setPao(
          int index, int value) {
        ensurePaoIsMutable();
        pao_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao = 33;</code>
       *
       * <pre>
       * 跑分
       * </pre>
       */
      public Builder addPao(int value) {
        ensurePaoIsMutable();
        pao_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao = 33;</code>
       *
       * <pre>
       * 跑分
       * </pre>
       */
      public Builder addAllPao(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePaoIsMutable();
        super.addAll(values, pao_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao = 33;</code>
       *
       * <pre>
       * 跑分
       * </pre>
       */
      public Builder clearPao() {
        pao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 piao = 34;
      private java.util.List<java.lang.Integer> piao_ = java.util.Collections.emptyList();
      private void ensurePiaoIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          piao_ = new java.util.ArrayList<java.lang.Integer>(piao_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 piao = 34;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPiaoList() {
        return java.util.Collections.unmodifiableList(piao_);
      }
      /**
       * <code>repeated int32 piao = 34;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public int getPiaoCount() {
        return piao_.size();
      }
      /**
       * <code>repeated int32 piao = 34;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public int getPiao(int index) {
        return piao_.get(index);
      }
      /**
       * <code>repeated int32 piao = 34;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public Builder setPiao(
          int index, int value) {
        ensurePiaoIsMutable();
        piao_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piao = 34;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public Builder addPiao(int value) {
        ensurePiaoIsMutable();
        piao_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piao = 34;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public Builder addAllPiao(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePiaoIsMutable();
        super.addAll(values, piao_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piao = 34;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public Builder clearPiao() {
        piao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 qiang = 35;
      private java.util.List<java.lang.Integer> qiang_ = java.util.Collections.emptyList();
      private void ensureQiangIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          qiang_ = new java.util.ArrayList<java.lang.Integer>(qiang_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 qiang = 35;</code>
       *
       * <pre>
       * 呛分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getQiangList() {
        return java.util.Collections.unmodifiableList(qiang_);
      }
      /**
       * <code>repeated int32 qiang = 35;</code>
       *
       * <pre>
       * 呛分
       * </pre>
       */
      public int getQiangCount() {
        return qiang_.size();
      }
      /**
       * <code>repeated int32 qiang = 35;</code>
       *
       * <pre>
       * 呛分
       * </pre>
       */
      public int getQiang(int index) {
        return qiang_.get(index);
      }
      /**
       * <code>repeated int32 qiang = 35;</code>
       *
       * <pre>
       * 呛分
       * </pre>
       */
      public Builder setQiang(
          int index, int value) {
        ensureQiangIsMutable();
        qiang_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 qiang = 35;</code>
       *
       * <pre>
       * 呛分
       * </pre>
       */
      public Builder addQiang(int value) {
        ensureQiangIsMutable();
        qiang_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 qiang = 35;</code>
       *
       * <pre>
       * 呛分
       * </pre>
       */
      public Builder addAllQiang(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureQiangIsMutable();
        super.addAll(values, qiang_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 qiang = 35;</code>
       *
       * <pre>
       * 呛分
       * </pre>
       */
      public Builder clearQiang() {
        qiang_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 nao = 36;
      private java.util.List<java.lang.Integer> nao_ = java.util.Collections.emptyList();
      private void ensureNaoIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          nao_ = new java.util.ArrayList<java.lang.Integer>(nao_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 nao = 36;</code>
       *
       * <pre>
       * 闹分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getNaoList() {
        return java.util.Collections.unmodifiableList(nao_);
      }
      /**
       * <code>repeated int32 nao = 36;</code>
       *
       * <pre>
       * 闹分
       * </pre>
       */
      public int getNaoCount() {
        return nao_.size();
      }
      /**
       * <code>repeated int32 nao = 36;</code>
       *
       * <pre>
       * 闹分
       * </pre>
       */
      public int getNao(int index) {
        return nao_.get(index);
      }
      /**
       * <code>repeated int32 nao = 36;</code>
       *
       * <pre>
       * 闹分
       * </pre>
       */
      public Builder setNao(
          int index, int value) {
        ensureNaoIsMutable();
        nao_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 nao = 36;</code>
       *
       * <pre>
       * 闹分
       * </pre>
       */
      public Builder addNao(int value) {
        ensureNaoIsMutable();
        nao_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 nao = 36;</code>
       *
       * <pre>
       * 闹分
       * </pre>
       */
      public Builder addAllNao(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNaoIsMutable();
        super.addAll(values, nao_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 nao = 36;</code>
       *
       * <pre>
       * 闹分
       * </pre>
       */
      public Builder clearNao() {
        nao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 pao_tou = 37;
      private java.util.List<java.lang.Integer> paoTou_ = java.util.Collections.emptyList();
      private void ensurePaoTouIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          paoTou_ = new java.util.ArrayList<java.lang.Integer>(paoTou_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 pao_tou = 37;</code>
       *
       * <pre>
       * 跑头
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPaoTouList() {
        return java.util.Collections.unmodifiableList(paoTou_);
      }
      /**
       * <code>repeated int32 pao_tou = 37;</code>
       *
       * <pre>
       * 跑头
       * </pre>
       */
      public int getPaoTouCount() {
        return paoTou_.size();
      }
      /**
       * <code>repeated int32 pao_tou = 37;</code>
       *
       * <pre>
       * 跑头
       * </pre>
       */
      public int getPaoTou(int index) {
        return paoTou_.get(index);
      }
      /**
       * <code>repeated int32 pao_tou = 37;</code>
       *
       * <pre>
       * 跑头
       * </pre>
       */
      public Builder setPaoTou(
          int index, int value) {
        ensurePaoTouIsMutable();
        paoTou_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao_tou = 37;</code>
       *
       * <pre>
       * 跑头
       * </pre>
       */
      public Builder addPaoTou(int value) {
        ensurePaoTouIsMutable();
        paoTou_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao_tou = 37;</code>
       *
       * <pre>
       * 跑头
       * </pre>
       */
      public Builder addAllPaoTou(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePaoTouIsMutable();
        super.addAll(values, paoTou_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao_tou = 37;</code>
       *
       * <pre>
       * 跑头
       * </pre>
       */
      public Builder clearPaoTou() {
        paoTou_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 pao_kou = 38;
      private java.util.List<java.lang.Integer> paoKou_ = java.util.Collections.emptyList();
      private void ensurePaoKouIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          paoKou_ = new java.util.ArrayList<java.lang.Integer>(paoKou_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 pao_kou = 38;</code>
       *
       * <pre>
       * 跑扣
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPaoKouList() {
        return java.util.Collections.unmodifiableList(paoKou_);
      }
      /**
       * <code>repeated int32 pao_kou = 38;</code>
       *
       * <pre>
       * 跑扣
       * </pre>
       */
      public int getPaoKouCount() {
        return paoKou_.size();
      }
      /**
       * <code>repeated int32 pao_kou = 38;</code>
       *
       * <pre>
       * 跑扣
       * </pre>
       */
      public int getPaoKou(int index) {
        return paoKou_.get(index);
      }
      /**
       * <code>repeated int32 pao_kou = 38;</code>
       *
       * <pre>
       * 跑扣
       * </pre>
       */
      public Builder setPaoKou(
          int index, int value) {
        ensurePaoKouIsMutable();
        paoKou_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao_kou = 38;</code>
       *
       * <pre>
       * 跑扣
       * </pre>
       */
      public Builder addPaoKou(int value) {
        ensurePaoKouIsMutable();
        paoKou_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao_kou = 38;</code>
       *
       * <pre>
       * 跑扣
       * </pre>
       */
      public Builder addAllPaoKou(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePaoKouIsMutable();
        super.addAll(values, paoKou_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pao_kou = 38;</code>
       *
       * <pre>
       * 跑扣
       * </pre>
       */
      public Builder clearPaoKou() {
        paoKou_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 bian_yan = 39;
      private java.util.List<java.lang.Integer> bianYan_ = java.util.Collections.emptyList();
      private void ensureBianYanIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          bianYan_ = new java.util.ArrayList<java.lang.Integer>(bianYan_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 bian_yan = 39;</code>
       *
       * <pre>
       * 表演
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBianYanList() {
        return java.util.Collections.unmodifiableList(bianYan_);
      }
      /**
       * <code>repeated int32 bian_yan = 39;</code>
       *
       * <pre>
       * 表演
       * </pre>
       */
      public int getBianYanCount() {
        return bianYan_.size();
      }
      /**
       * <code>repeated int32 bian_yan = 39;</code>
       *
       * <pre>
       * 表演
       * </pre>
       */
      public int getBianYan(int index) {
        return bianYan_.get(index);
      }
      /**
       * <code>repeated int32 bian_yan = 39;</code>
       *
       * <pre>
       * 表演
       * </pre>
       */
      public Builder setBianYan(
          int index, int value) {
        ensureBianYanIsMutable();
        bianYan_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bian_yan = 39;</code>
       *
       * <pre>
       * 表演
       * </pre>
       */
      public Builder addBianYan(int value) {
        ensureBianYanIsMutable();
        bianYan_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bian_yan = 39;</code>
       *
       * <pre>
       * 表演
       * </pre>
       */
      public Builder addAllBianYan(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBianYanIsMutable();
        super.addAll(values, bianYan_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bian_yan = 39;</code>
       *
       * <pre>
       * 表演
       * </pre>
       */
      public Builder clearBianYan() {
        bianYan_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.MJ_Game_End_Basic)
    }

    static {
      defaultInstance = new MJ_Game_End_Basic(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.MJ_Game_End_Basic)
  }

  public interface ScoreRowOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 条目名称
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 条目名称
     * </pre>
     */
    int getType();

    // optional int32 pScore1 = 2;
    /**
     * <code>optional int32 pScore1 = 2;</code>
     *
     * <pre>
     * 玩家1的分
     * </pre>
     */
    boolean hasPScore1();
    /**
     * <code>optional int32 pScore1 = 2;</code>
     *
     * <pre>
     * 玩家1的分
     * </pre>
     */
    int getPScore1();

    // optional int32 pScore2 = 3;
    /**
     * <code>optional int32 pScore2 = 3;</code>
     *
     * <pre>
     * 玩家2的分
     * </pre>
     */
    boolean hasPScore2();
    /**
     * <code>optional int32 pScore2 = 3;</code>
     *
     * <pre>
     * 玩家2的分
     * </pre>
     */
    int getPScore2();

    // optional int32 pScore3 = 4;
    /**
     * <code>optional int32 pScore3 = 4;</code>
     *
     * <pre>
     * 玩家3的分
     * </pre>
     */
    boolean hasPScore3();
    /**
     * <code>optional int32 pScore3 = 4;</code>
     *
     * <pre>
     * 玩家3的分
     * </pre>
     */
    int getPScore3();

    // optional int32 pScore4 = 5;
    /**
     * <code>optional int32 pScore4 = 5;</code>
     *
     * <pre>
     * 玩家4的分
     * </pre>
     */
    boolean hasPScore4();
    /**
     * <code>optional int32 pScore4 = 5;</code>
     *
     * <pre>
     * 玩家4的分
     * </pre>
     */
    int getPScore4();
  }
  /**
   * Protobuf type {@code mj.ScoreRow}
   */
  public static final class ScoreRow extends
      com.google.protobuf.GeneratedMessage
      implements ScoreRowOrBuilder {
    // Use ScoreRow.newBuilder() to construct.
    private ScoreRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ScoreRow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ScoreRow defaultInstance;
    public static ScoreRow getDefaultInstance() {
      return defaultInstance;
    }

    public ScoreRow getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ScoreRow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pScore1_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pScore2_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              pScore3_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              pScore4_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_ScoreRow_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_ScoreRow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.ScoreRow.class, protobuf.clazz.mj.Basic.ScoreRow.Builder.class);
    }

    public static com.google.protobuf.Parser<ScoreRow> PARSER =
        new com.google.protobuf.AbstractParser<ScoreRow>() {
      public ScoreRow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScoreRow(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ScoreRow> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 条目名称
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 条目名称
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 pScore1 = 2;
    public static final int PSCORE1_FIELD_NUMBER = 2;
    private int pScore1_;
    /**
     * <code>optional int32 pScore1 = 2;</code>
     *
     * <pre>
     * 玩家1的分
     * </pre>
     */
    public boolean hasPScore1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 pScore1 = 2;</code>
     *
     * <pre>
     * 玩家1的分
     * </pre>
     */
    public int getPScore1() {
      return pScore1_;
    }

    // optional int32 pScore2 = 3;
    public static final int PSCORE2_FIELD_NUMBER = 3;
    private int pScore2_;
    /**
     * <code>optional int32 pScore2 = 3;</code>
     *
     * <pre>
     * 玩家2的分
     * </pre>
     */
    public boolean hasPScore2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 pScore2 = 3;</code>
     *
     * <pre>
     * 玩家2的分
     * </pre>
     */
    public int getPScore2() {
      return pScore2_;
    }

    // optional int32 pScore3 = 4;
    public static final int PSCORE3_FIELD_NUMBER = 4;
    private int pScore3_;
    /**
     * <code>optional int32 pScore3 = 4;</code>
     *
     * <pre>
     * 玩家3的分
     * </pre>
     */
    public boolean hasPScore3() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 pScore3 = 4;</code>
     *
     * <pre>
     * 玩家3的分
     * </pre>
     */
    public int getPScore3() {
      return pScore3_;
    }

    // optional int32 pScore4 = 5;
    public static final int PSCORE4_FIELD_NUMBER = 5;
    private int pScore4_;
    /**
     * <code>optional int32 pScore4 = 5;</code>
     *
     * <pre>
     * 玩家4的分
     * </pre>
     */
    public boolean hasPScore4() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 pScore4 = 5;</code>
     *
     * <pre>
     * 玩家4的分
     * </pre>
     */
    public int getPScore4() {
      return pScore4_;
    }

    private void initFields() {
      type_ = 0;
      pScore1_ = 0;
      pScore2_ = 0;
      pScore3_ = 0;
      pScore4_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, pScore1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pScore2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, pScore3_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, pScore4_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pScore1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pScore2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, pScore3_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, pScore4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.ScoreRow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.ScoreRow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.ScoreRow}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.ScoreRowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_ScoreRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_ScoreRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.ScoreRow.class, protobuf.clazz.mj.Basic.ScoreRow.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.ScoreRow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pScore1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pScore2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        pScore3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        pScore4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_ScoreRow_descriptor;
      }

      public protobuf.clazz.mj.Basic.ScoreRow getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.ScoreRow.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.ScoreRow build() {
        protobuf.clazz.mj.Basic.ScoreRow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.ScoreRow buildPartial() {
        protobuf.clazz.mj.Basic.ScoreRow result = new protobuf.clazz.mj.Basic.ScoreRow(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pScore1_ = pScore1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pScore2_ = pScore2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pScore3_ = pScore3_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pScore4_ = pScore4_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.ScoreRow) {
          return mergeFrom((protobuf.clazz.mj.Basic.ScoreRow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.ScoreRow other) {
        if (other == protobuf.clazz.mj.Basic.ScoreRow.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPScore1()) {
          setPScore1(other.getPScore1());
        }
        if (other.hasPScore2()) {
          setPScore2(other.getPScore2());
        }
        if (other.hasPScore3()) {
          setPScore3(other.getPScore3());
        }
        if (other.hasPScore4()) {
          setPScore4(other.getPScore4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.ScoreRow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.ScoreRow) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 条目名称
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 条目名称
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 条目名称
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 条目名称
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pScore1 = 2;
      private int pScore1_ ;
      /**
       * <code>optional int32 pScore1 = 2;</code>
       *
       * <pre>
       * 玩家1的分
       * </pre>
       */
      public boolean hasPScore1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 pScore1 = 2;</code>
       *
       * <pre>
       * 玩家1的分
       * </pre>
       */
      public int getPScore1() {
        return pScore1_;
      }
      /**
       * <code>optional int32 pScore1 = 2;</code>
       *
       * <pre>
       * 玩家1的分
       * </pre>
       */
      public Builder setPScore1(int value) {
        bitField0_ |= 0x00000002;
        pScore1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pScore1 = 2;</code>
       *
       * <pre>
       * 玩家1的分
       * </pre>
       */
      public Builder clearPScore1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pScore1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pScore2 = 3;
      private int pScore2_ ;
      /**
       * <code>optional int32 pScore2 = 3;</code>
       *
       * <pre>
       * 玩家2的分
       * </pre>
       */
      public boolean hasPScore2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 pScore2 = 3;</code>
       *
       * <pre>
       * 玩家2的分
       * </pre>
       */
      public int getPScore2() {
        return pScore2_;
      }
      /**
       * <code>optional int32 pScore2 = 3;</code>
       *
       * <pre>
       * 玩家2的分
       * </pre>
       */
      public Builder setPScore2(int value) {
        bitField0_ |= 0x00000004;
        pScore2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pScore2 = 3;</code>
       *
       * <pre>
       * 玩家2的分
       * </pre>
       */
      public Builder clearPScore2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pScore2_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pScore3 = 4;
      private int pScore3_ ;
      /**
       * <code>optional int32 pScore3 = 4;</code>
       *
       * <pre>
       * 玩家3的分
       * </pre>
       */
      public boolean hasPScore3() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 pScore3 = 4;</code>
       *
       * <pre>
       * 玩家3的分
       * </pre>
       */
      public int getPScore3() {
        return pScore3_;
      }
      /**
       * <code>optional int32 pScore3 = 4;</code>
       *
       * <pre>
       * 玩家3的分
       * </pre>
       */
      public Builder setPScore3(int value) {
        bitField0_ |= 0x00000008;
        pScore3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pScore3 = 4;</code>
       *
       * <pre>
       * 玩家3的分
       * </pre>
       */
      public Builder clearPScore3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pScore3_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pScore4 = 5;
      private int pScore4_ ;
      /**
       * <code>optional int32 pScore4 = 5;</code>
       *
       * <pre>
       * 玩家4的分
       * </pre>
       */
      public boolean hasPScore4() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 pScore4 = 5;</code>
       *
       * <pre>
       * 玩家4的分
       * </pre>
       */
      public int getPScore4() {
        return pScore4_;
      }
      /**
       * <code>optional int32 pScore4 = 5;</code>
       *
       * <pre>
       * 玩家4的分
       * </pre>
       */
      public Builder setPScore4(int value) {
        bitField0_ |= 0x00000010;
        pScore4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pScore4 = 5;</code>
       *
       * <pre>
       * 玩家4的分
       * </pre>
       */
      public Builder clearPScore4() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pScore4_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.ScoreRow)
    }

    static {
      defaultInstance = new ScoreRow(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.ScoreRow)
  }

  public interface MJ_GAME_END_INFO_EXTOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 hu_score = 1;
    /**
     * <code>repeated int32 hu_score = 1;</code>
     *
     * <pre>
     *胡牌牌型分
     * </pre>
     */
    java.util.List<java.lang.Integer> getHuScoreList();
    /**
     * <code>repeated int32 hu_score = 1;</code>
     *
     * <pre>
     *胡牌牌型分
     * </pre>
     */
    int getHuScoreCount();
    /**
     * <code>repeated int32 hu_score = 1;</code>
     *
     * <pre>
     *胡牌牌型分
     * </pre>
     */
    int getHuScore(int index);

    // repeated int32 niao_score = 2;
    /**
     * <code>repeated int32 niao_score = 2;</code>
     *
     * <pre>
     *鸟牌分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getNiaoScoreList();
    /**
     * <code>repeated int32 niao_score = 2;</code>
     *
     * <pre>
     *鸟牌分数
     * </pre>
     */
    int getNiaoScoreCount();
    /**
     * <code>repeated int32 niao_score = 2;</code>
     *
     * <pre>
     *鸟牌分数
     * </pre>
     */
    int getNiaoScore(int index);

    // repeated int32 ming_gang_score = 3;
    /**
     * <code>repeated int32 ming_gang_score = 3;</code>
     *
     * <pre>
     *明杠分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getMingGangScoreList();
    /**
     * <code>repeated int32 ming_gang_score = 3;</code>
     *
     * <pre>
     *明杠分数
     * </pre>
     */
    int getMingGangScoreCount();
    /**
     * <code>repeated int32 ming_gang_score = 3;</code>
     *
     * <pre>
     *明杠分数
     * </pre>
     */
    int getMingGangScore(int index);

    // repeated int32 an_gang_score = 4;
    /**
     * <code>repeated int32 an_gang_score = 4;</code>
     *
     * <pre>
     *暗杠分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getAnGangScoreList();
    /**
     * <code>repeated int32 an_gang_score = 4;</code>
     *
     * <pre>
     *暗杠分数
     * </pre>
     */
    int getAnGangScoreCount();
    /**
     * <code>repeated int32 an_gang_score = 4;</code>
     *
     * <pre>
     *暗杠分数
     * </pre>
     */
    int getAnGangScore(int index);

    // repeated int32 hu_type = 5;
    /**
     * <code>repeated int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getHuTypeList();
    /**
     * <code>repeated int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌类型
     * </pre>
     */
    int getHuTypeCount();
    /**
     * <code>repeated int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌类型
     * </pre>
     */
    int getHuType(int index);

    // repeated int32 piao = 6;
    /**
     * <code>repeated int32 piao = 6;</code>
     *
     * <pre>
     *玩家飘分
     * </pre>
     */
    java.util.List<java.lang.Integer> getPiaoList();
    /**
     * <code>repeated int32 piao = 6;</code>
     *
     * <pre>
     *玩家飘分
     * </pre>
     */
    int getPiaoCount();
    /**
     * <code>repeated int32 piao = 6;</code>
     *
     * <pre>
     *玩家飘分
     * </pre>
     */
    int getPiao(int index);

    // repeated int32 zhi_gang_score = 7;
    /**
     * <code>repeated int32 zhi_gang_score = 7;</code>
     *
     * <pre>
     *直杠分
     * </pre>
     */
    java.util.List<java.lang.Integer> getZhiGangScoreList();
    /**
     * <code>repeated int32 zhi_gang_score = 7;</code>
     *
     * <pre>
     *直杠分
     * </pre>
     */
    int getZhiGangScoreCount();
    /**
     * <code>repeated int32 zhi_gang_score = 7;</code>
     *
     * <pre>
     *直杠分
     * </pre>
     */
    int getZhiGangScore(int index);
  }
  /**
   * Protobuf type {@code mj.MJ_GAME_END_INFO_EXT}
   *
   * <pre>
   *麻将结算消息扩展
   * </pre>
   */
  public static final class MJ_GAME_END_INFO_EXT extends
      com.google.protobuf.GeneratedMessage
      implements MJ_GAME_END_INFO_EXTOrBuilder {
    // Use MJ_GAME_END_INFO_EXT.newBuilder() to construct.
    private MJ_GAME_END_INFO_EXT(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MJ_GAME_END_INFO_EXT(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MJ_GAME_END_INFO_EXT defaultInstance;
    public static MJ_GAME_END_INFO_EXT getDefaultInstance() {
      return defaultInstance;
    }

    public MJ_GAME_END_INFO_EXT getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MJ_GAME_END_INFO_EXT(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                huScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              huScore_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                huScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                huScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                niaoScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              niaoScore_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                niaoScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                niaoScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                mingGangScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              mingGangScore_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                mingGangScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                mingGangScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                anGangScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              anGangScore_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                anGangScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                anGangScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                huType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              huType_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                huType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                huType_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                piao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              piao_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                piao_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                piao_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                zhiGangScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              zhiGangScore_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                zhiGangScore_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                zhiGangScore_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          huScore_ = java.util.Collections.unmodifiableList(huScore_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          niaoScore_ = java.util.Collections.unmodifiableList(niaoScore_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          mingGangScore_ = java.util.Collections.unmodifiableList(mingGangScore_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          anGangScore_ = java.util.Collections.unmodifiableList(anGangScore_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          huType_ = java.util.Collections.unmodifiableList(huType_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          piao_ = java.util.Collections.unmodifiableList(piao_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          zhiGangScore_ = java.util.Collections.unmodifiableList(zhiGangScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_MJ_GAME_END_INFO_EXT_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_MJ_GAME_END_INFO_EXT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT.class, protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT.Builder.class);
    }

    public static com.google.protobuf.Parser<MJ_GAME_END_INFO_EXT> PARSER =
        new com.google.protobuf.AbstractParser<MJ_GAME_END_INFO_EXT>() {
      public MJ_GAME_END_INFO_EXT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MJ_GAME_END_INFO_EXT(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MJ_GAME_END_INFO_EXT> getParserForType() {
      return PARSER;
    }

    // repeated int32 hu_score = 1;
    public static final int HU_SCORE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> huScore_;
    /**
     * <code>repeated int32 hu_score = 1;</code>
     *
     * <pre>
     *胡牌牌型分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHuScoreList() {
      return huScore_;
    }
    /**
     * <code>repeated int32 hu_score = 1;</code>
     *
     * <pre>
     *胡牌牌型分
     * </pre>
     */
    public int getHuScoreCount() {
      return huScore_.size();
    }
    /**
     * <code>repeated int32 hu_score = 1;</code>
     *
     * <pre>
     *胡牌牌型分
     * </pre>
     */
    public int getHuScore(int index) {
      return huScore_.get(index);
    }

    // repeated int32 niao_score = 2;
    public static final int NIAO_SCORE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> niaoScore_;
    /**
     * <code>repeated int32 niao_score = 2;</code>
     *
     * <pre>
     *鸟牌分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getNiaoScoreList() {
      return niaoScore_;
    }
    /**
     * <code>repeated int32 niao_score = 2;</code>
     *
     * <pre>
     *鸟牌分数
     * </pre>
     */
    public int getNiaoScoreCount() {
      return niaoScore_.size();
    }
    /**
     * <code>repeated int32 niao_score = 2;</code>
     *
     * <pre>
     *鸟牌分数
     * </pre>
     */
    public int getNiaoScore(int index) {
      return niaoScore_.get(index);
    }

    // repeated int32 ming_gang_score = 3;
    public static final int MING_GANG_SCORE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> mingGangScore_;
    /**
     * <code>repeated int32 ming_gang_score = 3;</code>
     *
     * <pre>
     *明杠分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMingGangScoreList() {
      return mingGangScore_;
    }
    /**
     * <code>repeated int32 ming_gang_score = 3;</code>
     *
     * <pre>
     *明杠分数
     * </pre>
     */
    public int getMingGangScoreCount() {
      return mingGangScore_.size();
    }
    /**
     * <code>repeated int32 ming_gang_score = 3;</code>
     *
     * <pre>
     *明杠分数
     * </pre>
     */
    public int getMingGangScore(int index) {
      return mingGangScore_.get(index);
    }

    // repeated int32 an_gang_score = 4;
    public static final int AN_GANG_SCORE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> anGangScore_;
    /**
     * <code>repeated int32 an_gang_score = 4;</code>
     *
     * <pre>
     *暗杠分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAnGangScoreList() {
      return anGangScore_;
    }
    /**
     * <code>repeated int32 an_gang_score = 4;</code>
     *
     * <pre>
     *暗杠分数
     * </pre>
     */
    public int getAnGangScoreCount() {
      return anGangScore_.size();
    }
    /**
     * <code>repeated int32 an_gang_score = 4;</code>
     *
     * <pre>
     *暗杠分数
     * </pre>
     */
    public int getAnGangScore(int index) {
      return anGangScore_.get(index);
    }

    // repeated int32 hu_type = 5;
    public static final int HU_TYPE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> huType_;
    /**
     * <code>repeated int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHuTypeList() {
      return huType_;
    }
    /**
     * <code>repeated int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌类型
     * </pre>
     */
    public int getHuTypeCount() {
      return huType_.size();
    }
    /**
     * <code>repeated int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌类型
     * </pre>
     */
    public int getHuType(int index) {
      return huType_.get(index);
    }

    // repeated int32 piao = 6;
    public static final int PIAO_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> piao_;
    /**
     * <code>repeated int32 piao = 6;</code>
     *
     * <pre>
     *玩家飘分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPiaoList() {
      return piao_;
    }
    /**
     * <code>repeated int32 piao = 6;</code>
     *
     * <pre>
     *玩家飘分
     * </pre>
     */
    public int getPiaoCount() {
      return piao_.size();
    }
    /**
     * <code>repeated int32 piao = 6;</code>
     *
     * <pre>
     *玩家飘分
     * </pre>
     */
    public int getPiao(int index) {
      return piao_.get(index);
    }

    // repeated int32 zhi_gang_score = 7;
    public static final int ZHI_GANG_SCORE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> zhiGangScore_;
    /**
     * <code>repeated int32 zhi_gang_score = 7;</code>
     *
     * <pre>
     *直杠分
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getZhiGangScoreList() {
      return zhiGangScore_;
    }
    /**
     * <code>repeated int32 zhi_gang_score = 7;</code>
     *
     * <pre>
     *直杠分
     * </pre>
     */
    public int getZhiGangScoreCount() {
      return zhiGangScore_.size();
    }
    /**
     * <code>repeated int32 zhi_gang_score = 7;</code>
     *
     * <pre>
     *直杠分
     * </pre>
     */
    public int getZhiGangScore(int index) {
      return zhiGangScore_.get(index);
    }

    private void initFields() {
      huScore_ = java.util.Collections.emptyList();
      niaoScore_ = java.util.Collections.emptyList();
      mingGangScore_ = java.util.Collections.emptyList();
      anGangScore_ = java.util.Collections.emptyList();
      huType_ = java.util.Collections.emptyList();
      piao_ = java.util.Collections.emptyList();
      zhiGangScore_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < huScore_.size(); i++) {
        output.writeInt32(1, huScore_.get(i));
      }
      for (int i = 0; i < niaoScore_.size(); i++) {
        output.writeInt32(2, niaoScore_.get(i));
      }
      for (int i = 0; i < mingGangScore_.size(); i++) {
        output.writeInt32(3, mingGangScore_.get(i));
      }
      for (int i = 0; i < anGangScore_.size(); i++) {
        output.writeInt32(4, anGangScore_.get(i));
      }
      for (int i = 0; i < huType_.size(); i++) {
        output.writeInt32(5, huType_.get(i));
      }
      for (int i = 0; i < piao_.size(); i++) {
        output.writeInt32(6, piao_.get(i));
      }
      for (int i = 0; i < zhiGangScore_.size(); i++) {
        output.writeInt32(7, zhiGangScore_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < huScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(huScore_.get(i));
        }
        size += dataSize;
        size += 1 * getHuScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < niaoScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(niaoScore_.get(i));
        }
        size += dataSize;
        size += 1 * getNiaoScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mingGangScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(mingGangScore_.get(i));
        }
        size += dataSize;
        size += 1 * getMingGangScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < anGangScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(anGangScore_.get(i));
        }
        size += dataSize;
        size += 1 * getAnGangScoreList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < huType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(huType_.get(i));
        }
        size += dataSize;
        size += 1 * getHuTypeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < piao_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(piao_.get(i));
        }
        size += dataSize;
        size += 1 * getPiaoList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < zhiGangScore_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(zhiGangScore_.get(i));
        }
        size += dataSize;
        size += 1 * getZhiGangScoreList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.MJ_GAME_END_INFO_EXT}
     *
     * <pre>
     *麻将结算消息扩展
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_MJ_GAME_END_INFO_EXT_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_MJ_GAME_END_INFO_EXT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT.class, protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        huScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        niaoScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        mingGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        anGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        huType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        piao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        zhiGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_MJ_GAME_END_INFO_EXT_descriptor;
      }

      public protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT build() {
        protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT buildPartial() {
        protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT result = new protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          huScore_ = java.util.Collections.unmodifiableList(huScore_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.huScore_ = huScore_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          niaoScore_ = java.util.Collections.unmodifiableList(niaoScore_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.niaoScore_ = niaoScore_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          mingGangScore_ = java.util.Collections.unmodifiableList(mingGangScore_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.mingGangScore_ = mingGangScore_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          anGangScore_ = java.util.Collections.unmodifiableList(anGangScore_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.anGangScore_ = anGangScore_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          huType_ = java.util.Collections.unmodifiableList(huType_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.huType_ = huType_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          piao_ = java.util.Collections.unmodifiableList(piao_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.piao_ = piao_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          zhiGangScore_ = java.util.Collections.unmodifiableList(zhiGangScore_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.zhiGangScore_ = zhiGangScore_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT) {
          return mergeFrom((protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT other) {
        if (other == protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT.getDefaultInstance()) return this;
        if (!other.huScore_.isEmpty()) {
          if (huScore_.isEmpty()) {
            huScore_ = other.huScore_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHuScoreIsMutable();
            huScore_.addAll(other.huScore_);
          }
          onChanged();
        }
        if (!other.niaoScore_.isEmpty()) {
          if (niaoScore_.isEmpty()) {
            niaoScore_ = other.niaoScore_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNiaoScoreIsMutable();
            niaoScore_.addAll(other.niaoScore_);
          }
          onChanged();
        }
        if (!other.mingGangScore_.isEmpty()) {
          if (mingGangScore_.isEmpty()) {
            mingGangScore_ = other.mingGangScore_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMingGangScoreIsMutable();
            mingGangScore_.addAll(other.mingGangScore_);
          }
          onChanged();
        }
        if (!other.anGangScore_.isEmpty()) {
          if (anGangScore_.isEmpty()) {
            anGangScore_ = other.anGangScore_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAnGangScoreIsMutable();
            anGangScore_.addAll(other.anGangScore_);
          }
          onChanged();
        }
        if (!other.huType_.isEmpty()) {
          if (huType_.isEmpty()) {
            huType_ = other.huType_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHuTypeIsMutable();
            huType_.addAll(other.huType_);
          }
          onChanged();
        }
        if (!other.piao_.isEmpty()) {
          if (piao_.isEmpty()) {
            piao_ = other.piao_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePiaoIsMutable();
            piao_.addAll(other.piao_);
          }
          onChanged();
        }
        if (!other.zhiGangScore_.isEmpty()) {
          if (zhiGangScore_.isEmpty()) {
            zhiGangScore_ = other.zhiGangScore_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureZhiGangScoreIsMutable();
            zhiGangScore_.addAll(other.zhiGangScore_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.MJ_GAME_END_INFO_EXT) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 hu_score = 1;
      private java.util.List<java.lang.Integer> huScore_ = java.util.Collections.emptyList();
      private void ensureHuScoreIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          huScore_ = new java.util.ArrayList<java.lang.Integer>(huScore_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 hu_score = 1;</code>
       *
       * <pre>
       *胡牌牌型分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHuScoreList() {
        return java.util.Collections.unmodifiableList(huScore_);
      }
      /**
       * <code>repeated int32 hu_score = 1;</code>
       *
       * <pre>
       *胡牌牌型分
       * </pre>
       */
      public int getHuScoreCount() {
        return huScore_.size();
      }
      /**
       * <code>repeated int32 hu_score = 1;</code>
       *
       * <pre>
       *胡牌牌型分
       * </pre>
       */
      public int getHuScore(int index) {
        return huScore_.get(index);
      }
      /**
       * <code>repeated int32 hu_score = 1;</code>
       *
       * <pre>
       *胡牌牌型分
       * </pre>
       */
      public Builder setHuScore(
          int index, int value) {
        ensureHuScoreIsMutable();
        huScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_score = 1;</code>
       *
       * <pre>
       *胡牌牌型分
       * </pre>
       */
      public Builder addHuScore(int value) {
        ensureHuScoreIsMutable();
        huScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_score = 1;</code>
       *
       * <pre>
       *胡牌牌型分
       * </pre>
       */
      public Builder addAllHuScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHuScoreIsMutable();
        super.addAll(values, huScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_score = 1;</code>
       *
       * <pre>
       *胡牌牌型分
       * </pre>
       */
      public Builder clearHuScore() {
        huScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 niao_score = 2;
      private java.util.List<java.lang.Integer> niaoScore_ = java.util.Collections.emptyList();
      private void ensureNiaoScoreIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          niaoScore_ = new java.util.ArrayList<java.lang.Integer>(niaoScore_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 niao_score = 2;</code>
       *
       * <pre>
       *鸟牌分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getNiaoScoreList() {
        return java.util.Collections.unmodifiableList(niaoScore_);
      }
      /**
       * <code>repeated int32 niao_score = 2;</code>
       *
       * <pre>
       *鸟牌分数
       * </pre>
       */
      public int getNiaoScoreCount() {
        return niaoScore_.size();
      }
      /**
       * <code>repeated int32 niao_score = 2;</code>
       *
       * <pre>
       *鸟牌分数
       * </pre>
       */
      public int getNiaoScore(int index) {
        return niaoScore_.get(index);
      }
      /**
       * <code>repeated int32 niao_score = 2;</code>
       *
       * <pre>
       *鸟牌分数
       * </pre>
       */
      public Builder setNiaoScore(
          int index, int value) {
        ensureNiaoScoreIsMutable();
        niaoScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 niao_score = 2;</code>
       *
       * <pre>
       *鸟牌分数
       * </pre>
       */
      public Builder addNiaoScore(int value) {
        ensureNiaoScoreIsMutable();
        niaoScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 niao_score = 2;</code>
       *
       * <pre>
       *鸟牌分数
       * </pre>
       */
      public Builder addAllNiaoScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNiaoScoreIsMutable();
        super.addAll(values, niaoScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 niao_score = 2;</code>
       *
       * <pre>
       *鸟牌分数
       * </pre>
       */
      public Builder clearNiaoScore() {
        niaoScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 ming_gang_score = 3;
      private java.util.List<java.lang.Integer> mingGangScore_ = java.util.Collections.emptyList();
      private void ensureMingGangScoreIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          mingGangScore_ = new java.util.ArrayList<java.lang.Integer>(mingGangScore_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 ming_gang_score = 3;</code>
       *
       * <pre>
       *明杠分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMingGangScoreList() {
        return java.util.Collections.unmodifiableList(mingGangScore_);
      }
      /**
       * <code>repeated int32 ming_gang_score = 3;</code>
       *
       * <pre>
       *明杠分数
       * </pre>
       */
      public int getMingGangScoreCount() {
        return mingGangScore_.size();
      }
      /**
       * <code>repeated int32 ming_gang_score = 3;</code>
       *
       * <pre>
       *明杠分数
       * </pre>
       */
      public int getMingGangScore(int index) {
        return mingGangScore_.get(index);
      }
      /**
       * <code>repeated int32 ming_gang_score = 3;</code>
       *
       * <pre>
       *明杠分数
       * </pre>
       */
      public Builder setMingGangScore(
          int index, int value) {
        ensureMingGangScoreIsMutable();
        mingGangScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ming_gang_score = 3;</code>
       *
       * <pre>
       *明杠分数
       * </pre>
       */
      public Builder addMingGangScore(int value) {
        ensureMingGangScoreIsMutable();
        mingGangScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ming_gang_score = 3;</code>
       *
       * <pre>
       *明杠分数
       * </pre>
       */
      public Builder addAllMingGangScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMingGangScoreIsMutable();
        super.addAll(values, mingGangScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ming_gang_score = 3;</code>
       *
       * <pre>
       *明杠分数
       * </pre>
       */
      public Builder clearMingGangScore() {
        mingGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 an_gang_score = 4;
      private java.util.List<java.lang.Integer> anGangScore_ = java.util.Collections.emptyList();
      private void ensureAnGangScoreIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          anGangScore_ = new java.util.ArrayList<java.lang.Integer>(anGangScore_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 an_gang_score = 4;</code>
       *
       * <pre>
       *暗杠分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAnGangScoreList() {
        return java.util.Collections.unmodifiableList(anGangScore_);
      }
      /**
       * <code>repeated int32 an_gang_score = 4;</code>
       *
       * <pre>
       *暗杠分数
       * </pre>
       */
      public int getAnGangScoreCount() {
        return anGangScore_.size();
      }
      /**
       * <code>repeated int32 an_gang_score = 4;</code>
       *
       * <pre>
       *暗杠分数
       * </pre>
       */
      public int getAnGangScore(int index) {
        return anGangScore_.get(index);
      }
      /**
       * <code>repeated int32 an_gang_score = 4;</code>
       *
       * <pre>
       *暗杠分数
       * </pre>
       */
      public Builder setAnGangScore(
          int index, int value) {
        ensureAnGangScoreIsMutable();
        anGangScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 an_gang_score = 4;</code>
       *
       * <pre>
       *暗杠分数
       * </pre>
       */
      public Builder addAnGangScore(int value) {
        ensureAnGangScoreIsMutable();
        anGangScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 an_gang_score = 4;</code>
       *
       * <pre>
       *暗杠分数
       * </pre>
       */
      public Builder addAllAnGangScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAnGangScoreIsMutable();
        super.addAll(values, anGangScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 an_gang_score = 4;</code>
       *
       * <pre>
       *暗杠分数
       * </pre>
       */
      public Builder clearAnGangScore() {
        anGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 hu_type = 5;
      private java.util.List<java.lang.Integer> huType_ = java.util.Collections.emptyList();
      private void ensureHuTypeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          huType_ = new java.util.ArrayList<java.lang.Integer>(huType_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHuTypeList() {
        return java.util.Collections.unmodifiableList(huType_);
      }
      /**
       * <code>repeated int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌类型
       * </pre>
       */
      public int getHuTypeCount() {
        return huType_.size();
      }
      /**
       * <code>repeated int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌类型
       * </pre>
       */
      public int getHuType(int index) {
        return huType_.get(index);
      }
      /**
       * <code>repeated int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌类型
       * </pre>
       */
      public Builder setHuType(
          int index, int value) {
        ensureHuTypeIsMutable();
        huType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌类型
       * </pre>
       */
      public Builder addHuType(int value) {
        ensureHuTypeIsMutable();
        huType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌类型
       * </pre>
       */
      public Builder addAllHuType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHuTypeIsMutable();
        super.addAll(values, huType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌类型
       * </pre>
       */
      public Builder clearHuType() {
        huType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 piao = 6;
      private java.util.List<java.lang.Integer> piao_ = java.util.Collections.emptyList();
      private void ensurePiaoIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          piao_ = new java.util.ArrayList<java.lang.Integer>(piao_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 piao = 6;</code>
       *
       * <pre>
       *玩家飘分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPiaoList() {
        return java.util.Collections.unmodifiableList(piao_);
      }
      /**
       * <code>repeated int32 piao = 6;</code>
       *
       * <pre>
       *玩家飘分
       * </pre>
       */
      public int getPiaoCount() {
        return piao_.size();
      }
      /**
       * <code>repeated int32 piao = 6;</code>
       *
       * <pre>
       *玩家飘分
       * </pre>
       */
      public int getPiao(int index) {
        return piao_.get(index);
      }
      /**
       * <code>repeated int32 piao = 6;</code>
       *
       * <pre>
       *玩家飘分
       * </pre>
       */
      public Builder setPiao(
          int index, int value) {
        ensurePiaoIsMutable();
        piao_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piao = 6;</code>
       *
       * <pre>
       *玩家飘分
       * </pre>
       */
      public Builder addPiao(int value) {
        ensurePiaoIsMutable();
        piao_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piao = 6;</code>
       *
       * <pre>
       *玩家飘分
       * </pre>
       */
      public Builder addAllPiao(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePiaoIsMutable();
        super.addAll(values, piao_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 piao = 6;</code>
       *
       * <pre>
       *玩家飘分
       * </pre>
       */
      public Builder clearPiao() {
        piao_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 zhi_gang_score = 7;
      private java.util.List<java.lang.Integer> zhiGangScore_ = java.util.Collections.emptyList();
      private void ensureZhiGangScoreIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          zhiGangScore_ = new java.util.ArrayList<java.lang.Integer>(zhiGangScore_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 zhi_gang_score = 7;</code>
       *
       * <pre>
       *直杠分
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getZhiGangScoreList() {
        return java.util.Collections.unmodifiableList(zhiGangScore_);
      }
      /**
       * <code>repeated int32 zhi_gang_score = 7;</code>
       *
       * <pre>
       *直杠分
       * </pre>
       */
      public int getZhiGangScoreCount() {
        return zhiGangScore_.size();
      }
      /**
       * <code>repeated int32 zhi_gang_score = 7;</code>
       *
       * <pre>
       *直杠分
       * </pre>
       */
      public int getZhiGangScore(int index) {
        return zhiGangScore_.get(index);
      }
      /**
       * <code>repeated int32 zhi_gang_score = 7;</code>
       *
       * <pre>
       *直杠分
       * </pre>
       */
      public Builder setZhiGangScore(
          int index, int value) {
        ensureZhiGangScoreIsMutable();
        zhiGangScore_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhi_gang_score = 7;</code>
       *
       * <pre>
       *直杠分
       * </pre>
       */
      public Builder addZhiGangScore(int value) {
        ensureZhiGangScoreIsMutable();
        zhiGangScore_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhi_gang_score = 7;</code>
       *
       * <pre>
       *直杠分
       * </pre>
       */
      public Builder addAllZhiGangScore(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureZhiGangScoreIsMutable();
        super.addAll(values, zhiGangScore_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 zhi_gang_score = 7;</code>
       *
       * <pre>
       *直杠分
       * </pre>
       */
      public Builder clearZhiGangScore() {
        zhiGangScore_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.MJ_GAME_END_INFO_EXT)
    }

    static {
      defaultInstance = new MJ_GAME_END_INFO_EXT(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.MJ_GAME_END_INFO_EXT)
  }

  public interface PaiXingListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mj.PaiXing pai_xing_list = 1;
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Basic.PaiXing> 
        getPaiXingListList();
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    protobuf.clazz.mj.Basic.PaiXing getPaiXingList(int index);
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    int getPaiXingListCount();
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Basic.PaiXingOrBuilder> 
        getPaiXingListOrBuilderList();
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    protobuf.clazz.mj.Basic.PaiXingOrBuilder getPaiXingListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mj.PaiXingList}
   */
  public static final class PaiXingList extends
      com.google.protobuf.GeneratedMessage
      implements PaiXingListOrBuilder {
    // Use PaiXingList.newBuilder() to construct.
    private PaiXingList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PaiXingList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PaiXingList defaultInstance;
    public static PaiXingList getDefaultInstance() {
      return defaultInstance;
    }

    public PaiXingList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PaiXingList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                paiXingList_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.PaiXing>();
                mutable_bitField0_ |= 0x00000001;
              }
              paiXingList_.add(input.readMessage(protobuf.clazz.mj.Basic.PaiXing.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          paiXingList_ = java.util.Collections.unmodifiableList(paiXingList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_PaiXingList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_PaiXingList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.PaiXingList.class, protobuf.clazz.mj.Basic.PaiXingList.Builder.class);
    }

    public static com.google.protobuf.Parser<PaiXingList> PARSER =
        new com.google.protobuf.AbstractParser<PaiXingList>() {
      public PaiXingList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PaiXingList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PaiXingList> getParserForType() {
      return PARSER;
    }

    // repeated .mj.PaiXing pai_xing_list = 1;
    public static final int PAI_XING_LIST_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.mj.Basic.PaiXing> paiXingList_;
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Basic.PaiXing> getPaiXingListList() {
      return paiXingList_;
    }
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Basic.PaiXingOrBuilder> 
        getPaiXingListOrBuilderList() {
      return paiXingList_;
    }
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    public int getPaiXingListCount() {
      return paiXingList_.size();
    }
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    public protobuf.clazz.mj.Basic.PaiXing getPaiXingList(int index) {
      return paiXingList_.get(index);
    }
    /**
     * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
     *
     * <pre>
     * 一个玩家所有的牌型类型的统计结果
     * </pre>
     */
    public protobuf.clazz.mj.Basic.PaiXingOrBuilder getPaiXingListOrBuilder(
        int index) {
      return paiXingList_.get(index);
    }

    private void initFields() {
      paiXingList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < paiXingList_.size(); i++) {
        output.writeMessage(1, paiXingList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < paiXingList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, paiXingList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.PaiXingList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.PaiXingList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.PaiXingList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.PaiXingListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_PaiXingList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_PaiXingList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.PaiXingList.class, protobuf.clazz.mj.Basic.PaiXingList.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.PaiXingList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPaiXingListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (paiXingListBuilder_ == null) {
          paiXingList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          paiXingListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_PaiXingList_descriptor;
      }

      public protobuf.clazz.mj.Basic.PaiXingList getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.PaiXingList.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.PaiXingList build() {
        protobuf.clazz.mj.Basic.PaiXingList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.PaiXingList buildPartial() {
        protobuf.clazz.mj.Basic.PaiXingList result = new protobuf.clazz.mj.Basic.PaiXingList(this);
        int from_bitField0_ = bitField0_;
        if (paiXingListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            paiXingList_ = java.util.Collections.unmodifiableList(paiXingList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.paiXingList_ = paiXingList_;
        } else {
          result.paiXingList_ = paiXingListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.PaiXingList) {
          return mergeFrom((protobuf.clazz.mj.Basic.PaiXingList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.PaiXingList other) {
        if (other == protobuf.clazz.mj.Basic.PaiXingList.getDefaultInstance()) return this;
        if (paiXingListBuilder_ == null) {
          if (!other.paiXingList_.isEmpty()) {
            if (paiXingList_.isEmpty()) {
              paiXingList_ = other.paiXingList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePaiXingListIsMutable();
              paiXingList_.addAll(other.paiXingList_);
            }
            onChanged();
          }
        } else {
          if (!other.paiXingList_.isEmpty()) {
            if (paiXingListBuilder_.isEmpty()) {
              paiXingListBuilder_.dispose();
              paiXingListBuilder_ = null;
              paiXingList_ = other.paiXingList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              paiXingListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPaiXingListFieldBuilder() : null;
            } else {
              paiXingListBuilder_.addAllMessages(other.paiXingList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.PaiXingList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.PaiXingList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mj.PaiXing pai_xing_list = 1;
      private java.util.List<protobuf.clazz.mj.Basic.PaiXing> paiXingList_ =
        java.util.Collections.emptyList();
      private void ensurePaiXingListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          paiXingList_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.PaiXing>(paiXingList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.PaiXing, protobuf.clazz.mj.Basic.PaiXing.Builder, protobuf.clazz.mj.Basic.PaiXingOrBuilder> paiXingListBuilder_;

      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.PaiXing> getPaiXingListList() {
        if (paiXingListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(paiXingList_);
        } else {
          return paiXingListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public int getPaiXingListCount() {
        if (paiXingListBuilder_ == null) {
          return paiXingList_.size();
        } else {
          return paiXingListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXing getPaiXingList(int index) {
        if (paiXingListBuilder_ == null) {
          return paiXingList_.get(index);
        } else {
          return paiXingListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder setPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXing value) {
        if (paiXingListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePaiXingListIsMutable();
          paiXingList_.set(index, value);
          onChanged();
        } else {
          paiXingListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder setPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXing.Builder builderForValue) {
        if (paiXingListBuilder_ == null) {
          ensurePaiXingListIsMutable();
          paiXingList_.set(index, builderForValue.build());
          onChanged();
        } else {
          paiXingListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder addPaiXingList(protobuf.clazz.mj.Basic.PaiXing value) {
        if (paiXingListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePaiXingListIsMutable();
          paiXingList_.add(value);
          onChanged();
        } else {
          paiXingListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder addPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXing value) {
        if (paiXingListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePaiXingListIsMutable();
          paiXingList_.add(index, value);
          onChanged();
        } else {
          paiXingListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder addPaiXingList(
          protobuf.clazz.mj.Basic.PaiXing.Builder builderForValue) {
        if (paiXingListBuilder_ == null) {
          ensurePaiXingListIsMutable();
          paiXingList_.add(builderForValue.build());
          onChanged();
        } else {
          paiXingListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder addPaiXingList(
          int index, protobuf.clazz.mj.Basic.PaiXing.Builder builderForValue) {
        if (paiXingListBuilder_ == null) {
          ensurePaiXingListIsMutable();
          paiXingList_.add(index, builderForValue.build());
          onChanged();
        } else {
          paiXingListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder addAllPaiXingList(
          java.lang.Iterable<? extends protobuf.clazz.mj.Basic.PaiXing> values) {
        if (paiXingListBuilder_ == null) {
          ensurePaiXingListIsMutable();
          super.addAll(values, paiXingList_);
          onChanged();
        } else {
          paiXingListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder clearPaiXingList() {
        if (paiXingListBuilder_ == null) {
          paiXingList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          paiXingListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public Builder removePaiXingList(int index) {
        if (paiXingListBuilder_ == null) {
          ensurePaiXingListIsMutable();
          paiXingList_.remove(index);
          onChanged();
        } else {
          paiXingListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXing.Builder getPaiXingListBuilder(
          int index) {
        return getPaiXingListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXingOrBuilder getPaiXingListOrBuilder(
          int index) {
        if (paiXingListBuilder_ == null) {
          return paiXingList_.get(index);  } else {
          return paiXingListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Basic.PaiXingOrBuilder> 
           getPaiXingListOrBuilderList() {
        if (paiXingListBuilder_ != null) {
          return paiXingListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(paiXingList_);
        }
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXing.Builder addPaiXingListBuilder() {
        return getPaiXingListFieldBuilder().addBuilder(
            protobuf.clazz.mj.Basic.PaiXing.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public protobuf.clazz.mj.Basic.PaiXing.Builder addPaiXingListBuilder(
          int index) {
        return getPaiXingListFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Basic.PaiXing.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.PaiXing pai_xing_list = 1;</code>
       *
       * <pre>
       * 一个玩家所有的牌型类型的统计结果
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.PaiXing.Builder> 
           getPaiXingListBuilderList() {
        return getPaiXingListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.PaiXing, protobuf.clazz.mj.Basic.PaiXing.Builder, protobuf.clazz.mj.Basic.PaiXingOrBuilder> 
          getPaiXingListFieldBuilder() {
        if (paiXingListBuilder_ == null) {
          paiXingListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Basic.PaiXing, protobuf.clazz.mj.Basic.PaiXing.Builder, protobuf.clazz.mj.Basic.PaiXingOrBuilder>(
                  paiXingList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          paiXingList_ = null;
        }
        return paiXingListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mj.PaiXingList)
    }

    static {
      defaultInstance = new PaiXingList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.PaiXingList)
  }

  public interface PaiXingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 牌型CHR的整型值
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 牌型CHR的整型值
     * </pre>
     */
    int getType();

    // optional int32 count = 2;
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 牌型次数统计
     * </pre>
     */
    boolean hasCount();
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 牌型次数统计
     * </pre>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code mj.PaiXing}
   */
  public static final class PaiXing extends
      com.google.protobuf.GeneratedMessage
      implements PaiXingOrBuilder {
    // Use PaiXing.newBuilder() to construct.
    private PaiXing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PaiXing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PaiXing defaultInstance;
    public static PaiXing getDefaultInstance() {
      return defaultInstance;
    }

    public PaiXing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PaiXing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_PaiXing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_PaiXing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.PaiXing.class, protobuf.clazz.mj.Basic.PaiXing.Builder.class);
    }

    public static com.google.protobuf.Parser<PaiXing> PARSER =
        new com.google.protobuf.AbstractParser<PaiXing>() {
      public PaiXing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PaiXing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PaiXing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 牌型CHR的整型值
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     * 牌型CHR的整型值
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 count = 2;
    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 牌型次数统计
     * </pre>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 count = 2;</code>
     *
     * <pre>
     * 牌型次数统计
     * </pre>
     */
    public int getCount() {
      return count_;
    }

    private void initFields() {
      type_ = 0;
      count_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.PaiXing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.PaiXing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.PaiXing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.PaiXingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_PaiXing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_PaiXing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.PaiXing.class, protobuf.clazz.mj.Basic.PaiXing.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.PaiXing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_PaiXing_descriptor;
      }

      public protobuf.clazz.mj.Basic.PaiXing getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.PaiXing.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.PaiXing build() {
        protobuf.clazz.mj.Basic.PaiXing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.PaiXing buildPartial() {
        protobuf.clazz.mj.Basic.PaiXing result = new protobuf.clazz.mj.Basic.PaiXing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.PaiXing) {
          return mergeFrom((protobuf.clazz.mj.Basic.PaiXing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.PaiXing other) {
        if (other == protobuf.clazz.mj.Basic.PaiXing.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.PaiXing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.PaiXing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 牌型CHR的整型值
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 牌型CHR的整型值
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 牌型CHR的整型值
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       * 牌型CHR的整型值
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 count = 2;
      private int count_ ;
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 牌型次数统计
       * </pre>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 牌型次数统计
       * </pre>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 牌型次数统计
       * </pre>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 count = 2;</code>
       *
       * <pre>
       * 牌型次数统计
       * </pre>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.PaiXing)
    }

    static {
      defaultInstance = new PaiXing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.PaiXing)
  }

  public interface RoundHuCardsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mj.HuCardList all_hu_cards_list = 1;
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Basic.HuCardList> 
        getAllHuCardsListList();
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    protobuf.clazz.mj.Basic.HuCardList getAllHuCardsList(int index);
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    int getAllHuCardsListCount();
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Basic.HuCardListOrBuilder> 
        getAllHuCardsListOrBuilderList();
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    protobuf.clazz.mj.Basic.HuCardListOrBuilder getAllHuCardsListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mj.RoundHuCards}
   */
  public static final class RoundHuCards extends
      com.google.protobuf.GeneratedMessage
      implements RoundHuCardsOrBuilder {
    // Use RoundHuCards.newBuilder() to construct.
    private RoundHuCards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoundHuCards(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoundHuCards defaultInstance;
    public static RoundHuCards getDefaultInstance() {
      return defaultInstance;
    }

    public RoundHuCards getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoundHuCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                allHuCardsList_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.HuCardList>();
                mutable_bitField0_ |= 0x00000001;
              }
              allHuCardsList_.add(input.readMessage(protobuf.clazz.mj.Basic.HuCardList.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          allHuCardsList_ = java.util.Collections.unmodifiableList(allHuCardsList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_RoundHuCards_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_RoundHuCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.RoundHuCards.class, protobuf.clazz.mj.Basic.RoundHuCards.Builder.class);
    }

    public static com.google.protobuf.Parser<RoundHuCards> PARSER =
        new com.google.protobuf.AbstractParser<RoundHuCards>() {
      public RoundHuCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoundHuCards(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoundHuCards> getParserForType() {
      return PARSER;
    }

    // repeated .mj.HuCardList all_hu_cards_list = 1;
    public static final int ALL_HU_CARDS_LIST_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.mj.Basic.HuCardList> allHuCardsList_;
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Basic.HuCardList> getAllHuCardsListList() {
      return allHuCardsList_;
    }
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Basic.HuCardListOrBuilder> 
        getAllHuCardsListOrBuilderList() {
      return allHuCardsList_;
    }
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    public int getAllHuCardsListCount() {
      return allHuCardsList_.size();
    }
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    public protobuf.clazz.mj.Basic.HuCardList getAllHuCardsList(int index) {
      return allHuCardsList_.get(index);
    }
    /**
     * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
     *
     * <pre>
     * 所有玩家的所有胡的牌
     * </pre>
     */
    public protobuf.clazz.mj.Basic.HuCardListOrBuilder getAllHuCardsListOrBuilder(
        int index) {
      return allHuCardsList_.get(index);
    }

    private void initFields() {
      allHuCardsList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < allHuCardsList_.size(); i++) {
        output.writeMessage(1, allHuCardsList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < allHuCardsList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, allHuCardsList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.RoundHuCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.RoundHuCards prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.RoundHuCards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.RoundHuCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_RoundHuCards_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_RoundHuCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.RoundHuCards.class, protobuf.clazz.mj.Basic.RoundHuCards.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.RoundHuCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAllHuCardsListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (allHuCardsListBuilder_ == null) {
          allHuCardsList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          allHuCardsListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_RoundHuCards_descriptor;
      }

      public protobuf.clazz.mj.Basic.RoundHuCards getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.RoundHuCards.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.RoundHuCards build() {
        protobuf.clazz.mj.Basic.RoundHuCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.RoundHuCards buildPartial() {
        protobuf.clazz.mj.Basic.RoundHuCards result = new protobuf.clazz.mj.Basic.RoundHuCards(this);
        int from_bitField0_ = bitField0_;
        if (allHuCardsListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            allHuCardsList_ = java.util.Collections.unmodifiableList(allHuCardsList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.allHuCardsList_ = allHuCardsList_;
        } else {
          result.allHuCardsList_ = allHuCardsListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.RoundHuCards) {
          return mergeFrom((protobuf.clazz.mj.Basic.RoundHuCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.RoundHuCards other) {
        if (other == protobuf.clazz.mj.Basic.RoundHuCards.getDefaultInstance()) return this;
        if (allHuCardsListBuilder_ == null) {
          if (!other.allHuCardsList_.isEmpty()) {
            if (allHuCardsList_.isEmpty()) {
              allHuCardsList_ = other.allHuCardsList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAllHuCardsListIsMutable();
              allHuCardsList_.addAll(other.allHuCardsList_);
            }
            onChanged();
          }
        } else {
          if (!other.allHuCardsList_.isEmpty()) {
            if (allHuCardsListBuilder_.isEmpty()) {
              allHuCardsListBuilder_.dispose();
              allHuCardsListBuilder_ = null;
              allHuCardsList_ = other.allHuCardsList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              allHuCardsListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllHuCardsListFieldBuilder() : null;
            } else {
              allHuCardsListBuilder_.addAllMessages(other.allHuCardsList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.RoundHuCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.RoundHuCards) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mj.HuCardList all_hu_cards_list = 1;
      private java.util.List<protobuf.clazz.mj.Basic.HuCardList> allHuCardsList_ =
        java.util.Collections.emptyList();
      private void ensureAllHuCardsListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          allHuCardsList_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.HuCardList>(allHuCardsList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.HuCardList, protobuf.clazz.mj.Basic.HuCardList.Builder, protobuf.clazz.mj.Basic.HuCardListOrBuilder> allHuCardsListBuilder_;

      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.HuCardList> getAllHuCardsListList() {
        if (allHuCardsListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allHuCardsList_);
        } else {
          return allHuCardsListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public int getAllHuCardsListCount() {
        if (allHuCardsListBuilder_ == null) {
          return allHuCardsList_.size();
        } else {
          return allHuCardsListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCardList getAllHuCardsList(int index) {
        if (allHuCardsListBuilder_ == null) {
          return allHuCardsList_.get(index);
        } else {
          return allHuCardsListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder setAllHuCardsList(
          int index, protobuf.clazz.mj.Basic.HuCardList value) {
        if (allHuCardsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllHuCardsListIsMutable();
          allHuCardsList_.set(index, value);
          onChanged();
        } else {
          allHuCardsListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder setAllHuCardsList(
          int index, protobuf.clazz.mj.Basic.HuCardList.Builder builderForValue) {
        if (allHuCardsListBuilder_ == null) {
          ensureAllHuCardsListIsMutable();
          allHuCardsList_.set(index, builderForValue.build());
          onChanged();
        } else {
          allHuCardsListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder addAllHuCardsList(protobuf.clazz.mj.Basic.HuCardList value) {
        if (allHuCardsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllHuCardsListIsMutable();
          allHuCardsList_.add(value);
          onChanged();
        } else {
          allHuCardsListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder addAllHuCardsList(
          int index, protobuf.clazz.mj.Basic.HuCardList value) {
        if (allHuCardsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllHuCardsListIsMutable();
          allHuCardsList_.add(index, value);
          onChanged();
        } else {
          allHuCardsListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder addAllHuCardsList(
          protobuf.clazz.mj.Basic.HuCardList.Builder builderForValue) {
        if (allHuCardsListBuilder_ == null) {
          ensureAllHuCardsListIsMutable();
          allHuCardsList_.add(builderForValue.build());
          onChanged();
        } else {
          allHuCardsListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder addAllHuCardsList(
          int index, protobuf.clazz.mj.Basic.HuCardList.Builder builderForValue) {
        if (allHuCardsListBuilder_ == null) {
          ensureAllHuCardsListIsMutable();
          allHuCardsList_.add(index, builderForValue.build());
          onChanged();
        } else {
          allHuCardsListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder addAllAllHuCardsList(
          java.lang.Iterable<? extends protobuf.clazz.mj.Basic.HuCardList> values) {
        if (allHuCardsListBuilder_ == null) {
          ensureAllHuCardsListIsMutable();
          super.addAll(values, allHuCardsList_);
          onChanged();
        } else {
          allHuCardsListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder clearAllHuCardsList() {
        if (allHuCardsListBuilder_ == null) {
          allHuCardsList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          allHuCardsListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public Builder removeAllHuCardsList(int index) {
        if (allHuCardsListBuilder_ == null) {
          ensureAllHuCardsListIsMutable();
          allHuCardsList_.remove(index);
          onChanged();
        } else {
          allHuCardsListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCardList.Builder getAllHuCardsListBuilder(
          int index) {
        return getAllHuCardsListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCardListOrBuilder getAllHuCardsListOrBuilder(
          int index) {
        if (allHuCardsListBuilder_ == null) {
          return allHuCardsList_.get(index);  } else {
          return allHuCardsListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Basic.HuCardListOrBuilder> 
           getAllHuCardsListOrBuilderList() {
        if (allHuCardsListBuilder_ != null) {
          return allHuCardsListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allHuCardsList_);
        }
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCardList.Builder addAllHuCardsListBuilder() {
        return getAllHuCardsListFieldBuilder().addBuilder(
            protobuf.clazz.mj.Basic.HuCardList.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCardList.Builder addAllHuCardsListBuilder(
          int index) {
        return getAllHuCardsListFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Basic.HuCardList.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.HuCardList all_hu_cards_list = 1;</code>
       *
       * <pre>
       * 所有玩家的所有胡的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.HuCardList.Builder> 
           getAllHuCardsListBuilderList() {
        return getAllHuCardsListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.HuCardList, protobuf.clazz.mj.Basic.HuCardList.Builder, protobuf.clazz.mj.Basic.HuCardListOrBuilder> 
          getAllHuCardsListFieldBuilder() {
        if (allHuCardsListBuilder_ == null) {
          allHuCardsListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Basic.HuCardList, protobuf.clazz.mj.Basic.HuCardList.Builder, protobuf.clazz.mj.Basic.HuCardListOrBuilder>(
                  allHuCardsList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          allHuCardsList_ = null;
        }
        return allHuCardsListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mj.RoundHuCards)
    }

    static {
      defaultInstance = new RoundHuCards(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.RoundHuCards)
  }

  public interface HuCardListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .mj.HuCard hu_cards = 1;
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    java.util.List<protobuf.clazz.mj.Basic.HuCard> 
        getHuCardsList();
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    protobuf.clazz.mj.Basic.HuCard getHuCards(int index);
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    int getHuCardsCount();
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    java.util.List<? extends protobuf.clazz.mj.Basic.HuCardOrBuilder> 
        getHuCardsOrBuilderList();
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    protobuf.clazz.mj.Basic.HuCardOrBuilder getHuCardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code mj.HuCardList}
   */
  public static final class HuCardList extends
      com.google.protobuf.GeneratedMessage
      implements HuCardListOrBuilder {
    // Use HuCardList.newBuilder() to construct.
    private HuCardList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HuCardList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HuCardList defaultInstance;
    public static HuCardList getDefaultInstance() {
      return defaultInstance;
    }

    public HuCardList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HuCardList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                huCards_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.HuCard>();
                mutable_bitField0_ |= 0x00000001;
              }
              huCards_.add(input.readMessage(protobuf.clazz.mj.Basic.HuCard.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          huCards_ = java.util.Collections.unmodifiableList(huCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_HuCardList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_HuCardList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.HuCardList.class, protobuf.clazz.mj.Basic.HuCardList.Builder.class);
    }

    public static com.google.protobuf.Parser<HuCardList> PARSER =
        new com.google.protobuf.AbstractParser<HuCardList>() {
      public HuCardList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HuCardList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HuCardList> getParserForType() {
      return PARSER;
    }

    // repeated .mj.HuCard hu_cards = 1;
    public static final int HU_CARDS_FIELD_NUMBER = 1;
    private java.util.List<protobuf.clazz.mj.Basic.HuCard> huCards_;
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    public java.util.List<protobuf.clazz.mj.Basic.HuCard> getHuCardsList() {
      return huCards_;
    }
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    public java.util.List<? extends protobuf.clazz.mj.Basic.HuCardOrBuilder> 
        getHuCardsOrBuilderList() {
      return huCards_;
    }
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    public int getHuCardsCount() {
      return huCards_.size();
    }
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    public protobuf.clazz.mj.Basic.HuCard getHuCards(int index) {
      return huCards_.get(index);
    }
    /**
     * <code>repeated .mj.HuCard hu_cards = 1;</code>
     *
     * <pre>
     * 单个玩家所有胡的牌
     * </pre>
     */
    public protobuf.clazz.mj.Basic.HuCardOrBuilder getHuCardsOrBuilder(
        int index) {
      return huCards_.get(index);
    }

    private void initFields() {
      huCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < huCards_.size(); i++) {
        output.writeMessage(1, huCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < huCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, huCards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.HuCardList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.HuCardList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.HuCardList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.HuCardListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_HuCardList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_HuCardList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.HuCardList.class, protobuf.clazz.mj.Basic.HuCardList.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.HuCardList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHuCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (huCardsBuilder_ == null) {
          huCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          huCardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_HuCardList_descriptor;
      }

      public protobuf.clazz.mj.Basic.HuCardList getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.HuCardList.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.HuCardList build() {
        protobuf.clazz.mj.Basic.HuCardList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.HuCardList buildPartial() {
        protobuf.clazz.mj.Basic.HuCardList result = new protobuf.clazz.mj.Basic.HuCardList(this);
        int from_bitField0_ = bitField0_;
        if (huCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            huCards_ = java.util.Collections.unmodifiableList(huCards_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.huCards_ = huCards_;
        } else {
          result.huCards_ = huCardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.HuCardList) {
          return mergeFrom((protobuf.clazz.mj.Basic.HuCardList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.HuCardList other) {
        if (other == protobuf.clazz.mj.Basic.HuCardList.getDefaultInstance()) return this;
        if (huCardsBuilder_ == null) {
          if (!other.huCards_.isEmpty()) {
            if (huCards_.isEmpty()) {
              huCards_ = other.huCards_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHuCardsIsMutable();
              huCards_.addAll(other.huCards_);
            }
            onChanged();
          }
        } else {
          if (!other.huCards_.isEmpty()) {
            if (huCardsBuilder_.isEmpty()) {
              huCardsBuilder_.dispose();
              huCardsBuilder_ = null;
              huCards_ = other.huCards_;
              bitField0_ = (bitField0_ & ~0x00000001);
              huCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHuCardsFieldBuilder() : null;
            } else {
              huCardsBuilder_.addAllMessages(other.huCards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.HuCardList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.HuCardList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .mj.HuCard hu_cards = 1;
      private java.util.List<protobuf.clazz.mj.Basic.HuCard> huCards_ =
        java.util.Collections.emptyList();
      private void ensureHuCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          huCards_ = new java.util.ArrayList<protobuf.clazz.mj.Basic.HuCard>(huCards_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.HuCard, protobuf.clazz.mj.Basic.HuCard.Builder, protobuf.clazz.mj.Basic.HuCardOrBuilder> huCardsBuilder_;

      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.HuCard> getHuCardsList() {
        if (huCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(huCards_);
        } else {
          return huCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public int getHuCardsCount() {
        if (huCardsBuilder_ == null) {
          return huCards_.size();
        } else {
          return huCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCard getHuCards(int index) {
        if (huCardsBuilder_ == null) {
          return huCards_.get(index);
        } else {
          return huCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder setHuCards(
          int index, protobuf.clazz.mj.Basic.HuCard value) {
        if (huCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuCardsIsMutable();
          huCards_.set(index, value);
          onChanged();
        } else {
          huCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder setHuCards(
          int index, protobuf.clazz.mj.Basic.HuCard.Builder builderForValue) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          huCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder addHuCards(protobuf.clazz.mj.Basic.HuCard value) {
        if (huCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuCardsIsMutable();
          huCards_.add(value);
          onChanged();
        } else {
          huCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder addHuCards(
          int index, protobuf.clazz.mj.Basic.HuCard value) {
        if (huCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuCardsIsMutable();
          huCards_.add(index, value);
          onChanged();
        } else {
          huCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder addHuCards(
          protobuf.clazz.mj.Basic.HuCard.Builder builderForValue) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.add(builderForValue.build());
          onChanged();
        } else {
          huCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder addHuCards(
          int index, protobuf.clazz.mj.Basic.HuCard.Builder builderForValue) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          huCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder addAllHuCards(
          java.lang.Iterable<? extends protobuf.clazz.mj.Basic.HuCard> values) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          super.addAll(values, huCards_);
          onChanged();
        } else {
          huCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder clearHuCards() {
        if (huCardsBuilder_ == null) {
          huCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          huCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public Builder removeHuCards(int index) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.remove(index);
          onChanged();
        } else {
          huCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCard.Builder getHuCardsBuilder(
          int index) {
        return getHuCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCardOrBuilder getHuCardsOrBuilder(
          int index) {
        if (huCardsBuilder_ == null) {
          return huCards_.get(index);  } else {
          return huCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public java.util.List<? extends protobuf.clazz.mj.Basic.HuCardOrBuilder> 
           getHuCardsOrBuilderList() {
        if (huCardsBuilder_ != null) {
          return huCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(huCards_);
        }
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCard.Builder addHuCardsBuilder() {
        return getHuCardsFieldBuilder().addBuilder(
            protobuf.clazz.mj.Basic.HuCard.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public protobuf.clazz.mj.Basic.HuCard.Builder addHuCardsBuilder(
          int index) {
        return getHuCardsFieldBuilder().addBuilder(
            index, protobuf.clazz.mj.Basic.HuCard.getDefaultInstance());
      }
      /**
       * <code>repeated .mj.HuCard hu_cards = 1;</code>
       *
       * <pre>
       * 单个玩家所有胡的牌
       * </pre>
       */
      public java.util.List<protobuf.clazz.mj.Basic.HuCard.Builder> 
           getHuCardsBuilderList() {
        return getHuCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          protobuf.clazz.mj.Basic.HuCard, protobuf.clazz.mj.Basic.HuCard.Builder, protobuf.clazz.mj.Basic.HuCardOrBuilder> 
          getHuCardsFieldBuilder() {
        if (huCardsBuilder_ == null) {
          huCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              protobuf.clazz.mj.Basic.HuCard, protobuf.clazz.mj.Basic.HuCard.Builder, protobuf.clazz.mj.Basic.HuCardOrBuilder>(
                  huCards_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          huCards_ = null;
        }
        return huCardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:mj.HuCardList)
    }

    static {
      defaultInstance = new HuCardList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.HuCardList)
  }

  public interface HuCardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card = 1;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 胡的牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 胡的牌
     * </pre>
     */
    int getCard();

    // optional int32 provider_index = 2;
    /**
     * <code>optional int32 provider_index = 2;</code>
     *
     * <pre>
     * 胡的提供者的座位号
     * </pre>
     */
    boolean hasProviderIndex();
    /**
     * <code>optional int32 provider_index = 2;</code>
     *
     * <pre>
     * 胡的提供者的座位号
     * </pre>
     */
    int getProviderIndex();
  }
  /**
   * Protobuf type {@code mj.HuCard}
   */
  public static final class HuCard extends
      com.google.protobuf.GeneratedMessage
      implements HuCardOrBuilder {
    // Use HuCard.newBuilder() to construct.
    private HuCard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HuCard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HuCard defaultInstance;
    public static HuCard getDefaultInstance() {
      return defaultInstance;
    }

    public HuCard getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HuCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              card_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              providerIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.clazz.mj.Basic.internal_static_mj_HuCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.clazz.mj.Basic.internal_static_mj_HuCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.clazz.mj.Basic.HuCard.class, protobuf.clazz.mj.Basic.HuCard.Builder.class);
    }

    public static com.google.protobuf.Parser<HuCard> PARSER =
        new com.google.protobuf.AbstractParser<HuCard>() {
      public HuCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HuCard(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HuCard> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private int card_;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 胡的牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 胡的牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional int32 provider_index = 2;
    public static final int PROVIDER_INDEX_FIELD_NUMBER = 2;
    private int providerIndex_;
    /**
     * <code>optional int32 provider_index = 2;</code>
     *
     * <pre>
     * 胡的提供者的座位号
     * </pre>
     */
    public boolean hasProviderIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 provider_index = 2;</code>
     *
     * <pre>
     * 胡的提供者的座位号
     * </pre>
     */
    public int getProviderIndex() {
      return providerIndex_;
    }

    private void initFields() {
      card_ = 0;
      providerIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, card_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, providerIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, card_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, providerIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.clazz.mj.Basic.HuCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.clazz.mj.Basic.HuCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.clazz.mj.Basic.HuCard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mj.HuCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.clazz.mj.Basic.HuCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.clazz.mj.Basic.internal_static_mj_HuCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.clazz.mj.Basic.internal_static_mj_HuCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.clazz.mj.Basic.HuCard.class, protobuf.clazz.mj.Basic.HuCard.Builder.class);
      }

      // Construct using protobuf.clazz.mj.Basic.HuCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        providerIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.clazz.mj.Basic.internal_static_mj_HuCard_descriptor;
      }

      public protobuf.clazz.mj.Basic.HuCard getDefaultInstanceForType() {
        return protobuf.clazz.mj.Basic.HuCard.getDefaultInstance();
      }

      public protobuf.clazz.mj.Basic.HuCard build() {
        protobuf.clazz.mj.Basic.HuCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.clazz.mj.Basic.HuCard buildPartial() {
        protobuf.clazz.mj.Basic.HuCard result = new protobuf.clazz.mj.Basic.HuCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.providerIndex_ = providerIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.clazz.mj.Basic.HuCard) {
          return mergeFrom((protobuf.clazz.mj.Basic.HuCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.clazz.mj.Basic.HuCard other) {
        if (other == protobuf.clazz.mj.Basic.HuCard.getDefaultInstance()) return this;
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasProviderIndex()) {
          setProviderIndex(other.getProviderIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.clazz.mj.Basic.HuCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.clazz.mj.Basic.HuCard) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card = 1;
      private int card_ ;
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 胡的牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 胡的牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 胡的牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000001;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 胡的牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional int32 provider_index = 2;
      private int providerIndex_ ;
      /**
       * <code>optional int32 provider_index = 2;</code>
       *
       * <pre>
       * 胡的提供者的座位号
       * </pre>
       */
      public boolean hasProviderIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 provider_index = 2;</code>
       *
       * <pre>
       * 胡的提供者的座位号
       * </pre>
       */
      public int getProviderIndex() {
        return providerIndex_;
      }
      /**
       * <code>optional int32 provider_index = 2;</code>
       *
       * <pre>
       * 胡的提供者的座位号
       * </pre>
       */
      public Builder setProviderIndex(int value) {
        bitField0_ |= 0x00000002;
        providerIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 provider_index = 2;</code>
       *
       * <pre>
       * 胡的提供者的座位号
       * </pre>
       */
      public Builder clearProviderIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        providerIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mj.HuCard)
    }

    static {
      defaultInstance = new HuCard(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:mj.HuCard)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_MJ_Game_End_Basic_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_MJ_Game_End_Basic_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_ScoreRow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_ScoreRow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_MJ_GAME_END_INFO_EXT_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_MJ_GAME_END_INFO_EXT_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_PaiXingList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_PaiXingList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_PaiXing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_PaiXing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_RoundHuCards_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_RoundHuCards_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_HuCardList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_HuCardList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mj_HuCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mj_HuCard_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016mj/basic.proto\022\002mj\032\024basic/protocol.pro" +
      "to\"\232\002\n\021MJ_Game_End_Basic\022\033\n\023is_ting_when" +
      "_finish\030\001 \003(\010\022\024\n\014who_provided\030\002 \003(\005\022\027\n\017f" +
      "inally_fan_shu\030\003 \003(\005\022%\n\017allScoreDetails\030" +
      "\004 \003(\0132\014.mj.ScoreRow\022\'\n\016allPaiXingList\030\005 " +
      "\003(\0132\017.mj.PaiXingList\022\013\n\003pao\030! \003(\005\022\014\n\004pia" +
      "o\030\" \003(\005\022\r\n\005qiang\030# \003(\005\022\013\n\003nao\030$ \003(\005\022\017\n\007p" +
      "ao_tou\030% \003(\005\022\017\n\007pao_kou\030& \003(\005\022\020\n\010bian_ya" +
      "n\030\' \003(\005\"\\\n\010ScoreRow\022\014\n\004type\030\001 \001(\005\022\017\n\007pSc" +
      "ore1\030\002 \001(\005\022\017\n\007pScore2\030\003 \001(\005\022\017\n\007pScore3\030\004",
      " \001(\005\022\017\n\007pScore4\030\005 \001(\005\"\243\001\n\024MJ_GAME_END_IN" +
      "FO_EXT\022\020\n\010hu_score\030\001 \003(\005\022\022\n\nniao_score\030\002" +
      " \003(\005\022\027\n\017ming_gang_score\030\003 \003(\005\022\025\n\ran_gang" +
      "_score\030\004 \003(\005\022\017\n\007hu_type\030\005 \003(\005\022\014\n\004piao\030\006 " +
      "\003(\005\022\026\n\016zhi_gang_score\030\007 \003(\005\"1\n\013PaiXingLi" +
      "st\022\"\n\rpai_xing_list\030\001 \003(\0132\013.mj.PaiXing\"&" +
      "\n\007PaiXing\022\014\n\004type\030\001 \001(\005\022\r\n\005count\030\002 \001(\005\"9" +
      "\n\014RoundHuCards\022)\n\021all_hu_cards_list\030\001 \003(" +
      "\0132\016.mj.HuCardList\"*\n\nHuCardList\022\034\n\010hu_ca" +
      "rds\030\001 \003(\0132\n.mj.HuCard\".\n\006HuCard\022\014\n\004card\030",
      "\001 \001(\005\022\026\n\016provider_index\030\002 \001(\005B\032\n\021protobu" +
      "f.clazz.mjB\005Basic"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mj_MJ_Game_End_Basic_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mj_MJ_Game_End_Basic_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_MJ_Game_End_Basic_descriptor,
              new java.lang.String[] { "IsTingWhenFinish", "WhoProvided", "FinallyFanShu", "AllScoreDetails", "AllPaiXingList", "Pao", "Piao", "Qiang", "Nao", "PaoTou", "PaoKou", "BianYan", });
          internal_static_mj_ScoreRow_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_mj_ScoreRow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_ScoreRow_descriptor,
              new java.lang.String[] { "Type", "PScore1", "PScore2", "PScore3", "PScore4", });
          internal_static_mj_MJ_GAME_END_INFO_EXT_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_mj_MJ_GAME_END_INFO_EXT_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_MJ_GAME_END_INFO_EXT_descriptor,
              new java.lang.String[] { "HuScore", "NiaoScore", "MingGangScore", "AnGangScore", "HuType", "Piao", "ZhiGangScore", });
          internal_static_mj_PaiXingList_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_mj_PaiXingList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_PaiXingList_descriptor,
              new java.lang.String[] { "PaiXingList", });
          internal_static_mj_PaiXing_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_mj_PaiXing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_PaiXing_descriptor,
              new java.lang.String[] { "Type", "Count", });
          internal_static_mj_RoundHuCards_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_mj_RoundHuCards_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_RoundHuCards_descriptor,
              new java.lang.String[] { "AllHuCardsList", });
          internal_static_mj_HuCardList_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_mj_HuCardList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_HuCardList_descriptor,
              new java.lang.String[] { "HuCards", });
          internal_static_mj_HuCard_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_mj_HuCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mj_HuCard_descriptor,
              new java.lang.String[] { "Card", "ProviderIndex", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protobuf.clazz.Protocol.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
